type Team {
	id: ID!
	name: String!
	members: [ID]!
	score: Int!
	rank: Int!
	data: Map!
}

input CreateTeam {
	name: String!
	members: [ID]!
	score: Int = 0
	data: Map
}

input GetTeam {
	id: ID
	name: String
}

input GetTeams {
	max: Int = 10
	page: Int = 1
}

input SearchTeams {
	query: String!
	max: Int = 10
	page: Int = 1
}

input UpdateTeamData {
	id: ID
	name: String
	data: Map!
}

input UpdateTeamScore {
	id: ID
	name: String
	score: Int!
}

input DeleteTeam {
	id: ID
	name: String
}

input JoinTeam {
	id: ID
	name: String
	userId: ID!
}

input LeaveTeam {
	id: ID
	name: String
	userId: ID!
}

extend type Query {
	getTeam(input: GetTeam!): Team
	getTeams(input: GetTeams): [Team]!
	searchTeams(input: SearchTeams!): [Team]!
}

extend type Mutation {
	createTeam(input: CreateTeam!): Boolean!
	updateTeamData(input: UpdateTeamData!): Team!
	updateTeamScore(input: UpdateTeamScore!): Team!
	deleteTeam(input: DeleteTeam!): Boolean!
	joinTeam(input: JoinTeam!): Boolean!
	leaveTeam(input: LeaveTeam!): Boolean!
}
