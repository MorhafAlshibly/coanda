version: "3"

tasks:
   init:
      dotenv: ["../../env/.env.oci"]
      cmds:
         - cmd: oci os bucket create --name $BUCKET --compartment-id $COMPARTMENT_ID --public-access-type NoPublicAccess
           ignore_error: true
         # Terraform init
         - |
            NAMESPACE=$(oci os ns get | jq -r '.data' | dos2unix)
            terraform init --backend-config="bucket=$BUCKET" \
            --backend-config="key=$KEY" \
            --backend-config="region=$REGION" \
            --backend-config="access_key=$ACCESS_KEY" \
            --backend-config="secret_key=$SECRET_KEY" \
            --backend-config="endpoint=https://$NAMESPACE.compat.objectstorage.$REGION.oraclecloud.com" \
         # Terraform workspace
         - terraform workspace new dev
         - terraform workspace new stage
         - terraform workspace new prod

   plan:
      # Need to source the env file to work with terraform
      cmds:
         - terraform workspace select {{.ENV}}
         - . ../../env/.env.{{.ENV}} && . ../../env/.env.oci && terraform plan
      requires:
         vars: [ENV]
   apply:
      cmds:
         - terraform workspace select {{.ENV}}
         - . ../../env/.env.{{.ENV}} && . ../../env/.env.oci && terraform apply -auto-approve
      requires:
         vars: [ENV]
   destroy:
      cmds:
         - terraform workspace select {{.ENV}}
         - . ../../env/.env.{{.ENV}} && . ../../env/.env.oci && terraform destroy -auto-approve
      requires:
         vars: [ENV]
   # Docker compose commands
   up:
      dotenv: ["../../env/.env.{{.ENV}}", "../../env/.env.oci"]
      # Export image url as it is different for each infrastructure
      cmds:
         - |
            NAMESPACE=$(oci os ns get | jq -r '.data' | dos2unix)
            export IMAGE_URI="${REGION}.ocir.io/${NAMESPACE}/cr-${APPNAME}-${ENVIRONMENT}-${REGION}" && docker-compose --env-file ../../env/.env.{{.ENV}} up
      requires:
         vars: [ENV]
   down:
      dotenv: ["../../env/.env.{{.ENV}}", "../../env/.env.oci"]
      cmds:
         - |
            NAMESPACE=$(oci os ns get | jq -r '.data' | dos2unix)
            export IMAGE_URI="${REGION}.ocir.io/${NAMESPACE}/cr-${APPNAME}-${ENVIRONMENT}-${REGION}" && docker-compose --env-file ../../env/.env.{{.ENV}} down
      requires:
         vars: [ENV]
   push:
      dotenv: ["../../env/.env.{{.ENV}}", "../../env/.env.oci"]
      cmds:
         - az acr login --name "acr${APPNAME}${ENVIRONMENT}${LOCATION}"
         - |
            NAMESPACE=$(oci os ns get | jq -r '.data' | dos2unix)
            export IMAGE_URI="${REGION}.ocir.io/${NAMESPACE}/cr-${APPNAME}-${ENVIRONMENT}-${REGION}" && docker-compose --env-file ../../env/.env.{{.ENV}} build
            export IMAGE_URI="${REGION}.ocir.io/${NAMESPACE}/cr-${APPNAME}-${ENVIRONMENT}-${REGION}" && docker-compose --env-file ../../env/.env.{{.ENV}} push
      requires:
         vars: [ENV]
