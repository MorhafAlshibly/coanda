version: "3"

tasks:
   init:
      dotenv: ["../../env/.env.oci"]
      cmds:
         - cmd: oci os bucket create --name $BUCKET --compartment-id $COMPARTMENT_ID --public-access-type NoPublicAccess
           ignore_error: true
         # Terraform init
         - |
            NAMESPACE=$(oci os ns get | jq -r '.data' | dos2unix)
            terraform init --backend-config="bucket=$BUCKET" \
            --backend-config="key=$KEY" \
            --backend-config="region=$REGION" \
            --backend-config="access_key=$ACCESS_KEY" \
            --backend-config="secret_key=$SECRET_KEY" \
            --backend-config="endpoint=https://$NAMESPACE.compat.objectstorage.$REGION.oraclecloud.com" \
         # Terraform workspace
         - terraform workspace new dev
         - terraform workspace new stage
         - terraform workspace new prod
   plan:
      # Need to source the env file to work with terraform
      cmds:
         - terraform workspace select {{.ENV}}
         - . ../../env/.env.{{.ENV}} && . ../../env/.env.oci && terraform plan
      requires:
         vars: [ENV]
   apply:
      cmds:
         - terraform workspace select {{.ENV}}
         - . ../../env/.env.{{.ENV}} && . ../../env/.env.oci && terraform apply -auto-approve
      requires:
         vars: [ENV]
   destroy:
      cmds:
         - terraform workspace select {{.ENV}}
         - . ../../env/.env.{{.ENV}} && . ../../env/.env.oci && terraform destroy -auto-approve
      requires:
         vars: [ENV]
   # Docker compose commands
   push:
      dotenv: ["../../env/.env.{{.ENV}}", "../../env/.env.oci"]
      cmds:
         # Login to docker using OCI auth token and username
         - echo $AUTH_TOKEN | docker login "${REGION}.ocir.io" -u "{{.NAMESPACE}}/{{.USERNAME}}" --password-stdin
         - export IMAGE_URI="${REGION}.ocir.io/{{.NAMESPACE}}/{{.REPO_NAME}}" && export PLATFORM={{.PLATFORM}} && docker-compose --env-file ../../env/.env.{{.ENV}} build
         - export IMAGE_URI="${REGION}.ocir.io/{{.NAMESPACE}}/{{.REPO_NAME}}" && export PLATFORM={{.PLATFORM}} && docker-compose --env-file ../../env/.env.{{.ENV}} push
      requires:
         # Variables from terraform local exec
         vars: [ENV, NAMESPACE, REPO_NAME, USERNAME, PLATFORM]
   # Helper command to get mongodb connection string
   mongo:
      cmds:
         - |
            mongo_connection_string=$(oci db autonomous-database get --autonomous-database-id {{.OCID}} --query 'data."connection-urls"."mongo-db-url"' --raw-output | dos2unix)
            jq -n --arg mongo_connection_string "$mongo_connection_string" '{"mongo_connection_string":$mongo_connection_string}'

      requires:
         vars: [OCID]
