CREATE TABLE matchmaking_user (
    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
    client_user_id BIGINT UNSIGNED UNIQUE NOT NULL,
    elo INT NOT NULL,
    data JSON NOT NULL,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id)
) ENGINE = InnoDB;
CREATE TABLE matchmaking_arena (
    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
    name VARCHAR(255) UNIQUE NOT NULL,
    min_players TINYINT UNSIGNED NOT NULL,
    max_players_per_ticket TINYINT UNSIGNED NOT NULL,
    max_players TINYINT UNSIGNED NOT NULL,
    data JSON NOT NULL,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id)
) ENGINE = InnoDB;
CREATE TABLE matchmaking_match (
    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
    matchmaking_arena_id BIGINT UNSIGNED NOT NULL,
    private_server_id VARCHAR(255) NULL,
    data JSON NOT NULL,
    locked_at DATETIME NULL,
    started_at DATETIME NULL,
    ended_at DATETIME NULL,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    CONSTRAINT fk_matchmaking_match_matchmaking_arena FOREIGN KEY (matchmaking_arena_id) REFERENCES matchmaking_arena (id) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE = InnoDB;
CREATE TABLE matchmaking_ticket (
    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
    matchmaking_match_id BIGINT UNSIGNED NULL,
    elo_window INT UNSIGNED NOT NULL,
    data JSON NOT NULL,
    expires_at DATETIME NOT NULL,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    CONSTRAINT fk_matchmaking_ticket_matchmaking_match FOREIGN KEY (matchmaking_match_id) REFERENCES matchmaking_match (id) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE = InnoDB;
CREATE TABLE matchmaking_ticket_arena (
    matchmaking_ticket_id BIGINT UNSIGNED NOT NULL,
    matchmaking_arena_id BIGINT UNSIGNED NOT NULL,
    PRIMARY KEY (matchmaking_ticket_id, matchmaking_arena_id),
    CONSTRAINT fk_matchmaking_ticket_arena_matchmaking_arena FOREIGN KEY (matchmaking_arena_id) REFERENCES matchmaking_arena (id) ON DELETE NO ACTION ON UPDATE NO ACTION,
    CONSTRAINT fk_matchmaking_ticket_arena_matchmaking_ticket FOREIGN KEY (matchmaking_ticket_id) REFERENCES matchmaking_ticket (id) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE = InnoDB;
CREATE TABLE matchmaking_ticket_user (
    matchmaking_ticket_id BIGINT UNSIGNED NOT NULL,
    matchmaking_user_id BIGINT UNSIGNED NOT NULL,
    PRIMARY KEY (matchmaking_ticket_id, matchmaking_user_id),
    CONSTRAINT fk_matchmaking_ticket_user_matchmaking_ticket FOREIGN KEY (matchmaking_ticket_id) REFERENCES matchmaking_ticket (id) ON DELETE NO ACTION ON UPDATE NO ACTION,
    CONSTRAINT fk_matchmaking_ticket_user_matchmaking_user FOREIGN KEY (matchmaking_user_id) REFERENCES matchmaking_user (id) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE = InnoDB;
CREATE VIEW matchmaking_ticket_with_user AS
SELECT mt.id AS ticket_id,
    mt.matchmaking_match_id,
    CASE
        WHEN mt.matchmaking_match_id IS NULL
        AND mt.expires_at > NOW() THEN "PENDING"
        WHEN mt.matchmaking_match_id IS NULL
        AND mt.expires_at < NOW() THEN "EXPIRED"
        WHEN mt.matchmaking_match_id IS NOT NULL
        AND (
            mm.ended_at > NOW()
            OR mm.ended_at IS NULL
        ) THEN "MATCHED"
        ELSE "ENDED"
    END AS status,
    mt.data AS ticket_data,
    mt.expires_at,
    mt.created_at AS ticket_created_at,
    mt.updated_at AS ticket_updated_at,
    mu.id AS matchmaking_user_id,
    mu.client_user_id,
    mu.elo,
    ROW_NUMBER() OVER (
        PARTITION BY mt.id
        ORDER BY mu.id
    ) AS user_number,
    mu.data AS user_data,
    mu.created_at AS user_created_at,
    mu.updated_at AS user_updated_at
FROM matchmaking_ticket mt
    JOIN matchmaking_ticket_user mtu ON mt.id = mtu.matchmaking_ticket_id
    JOIN matchmaking_user mu ON mtu.matchmaking_user_id = mu.id
    LEFT JOIN matchmaking_match mm ON mt.matchmaking_match_id = mm.id
GROUP BY mt.id, mu.id
ORDER BY mt.id,
    mu.id;
CREATE VIEW matchmaking_ticket_with_user_and_arena AS
SELECT mtwu.ticket_id,
    mtwu.matchmaking_match_id,
    mtwu.status,
    mtwu.ticket_data,
    mtwu.expires_at,
    mtwu.ticket_created_at,
    mtwu.ticket_updated_at,
    mtwu.matchmaking_user_id,
    mtwu.client_user_id,
    mtwu.elo,
    mtwu.user_number,
    mtwu.user_data,
    mtwu.user_created_at,
    mtwu.user_updated_at,
    ma.id AS arena_id,
    ma.name AS arena_name,
    ma.min_players AS arena_min_players,
    ma.max_players_per_ticket AS arena_max_players_per_ticket,
    ma.max_players AS arena_max_players,
    ROW_NUMBER() OVER (
        PARTITION BY mtwu.ticket_id
        ORDER BY ma.id
    ) AS arena_number,
    ma.data AS arena_data,
    ma.created_at AS arena_created_at,
    ma.updated_at AS arena_updated_at
FROM matchmaking_ticket_with_user mtwu
    JOIN matchmaking_ticket_arena mta ON mtwu.ticket_id = mta.matchmaking_ticket_id
    JOIN matchmaking_arena ma ON mta.matchmaking_arena_id = ma.id
GROUP BY mtwu.ticket_id, mtwu.matchmaking_user_id, ma.id
ORDER BY mtwu.ticket_id,
    mtwu.matchmaking_user_id,
    ma.id;
CREATE VIEW matchmaking_match_with_arena_and_ticket AS
SELECT mm.id AS match_id,
    mm.private_server_id,
    CASE
        WHEN mm.started_at IS NULL
        OR mm.started_at > NOW() THEN "PENDING"
        WHEN mm.ended_at IS NULL
        OR mm.ended_at > NOW() THEN "STARTED"
        ELSE "ENDED"
    END AS match_status,
    mm.data AS match_data,
    mm.locked_at,
    mm.started_at,
    mm.ended_at,
    mm.created_at AS match_created_at,
    mm.updated_at AS match_updated_at,
    ma.id AS arena_id,
    ma.name AS arena_name,
    ma.min_players AS arena_min_players,
    ma.max_players_per_ticket AS arena_max_players_per_ticket,
    ma.max_players AS arena_max_players,
    ma.data AS arena_data,
    ma.created_at AS arena_created_at,
    ma.updated_at AS arena_updated_at,
    mtwuap.ticket_id,
    mtwuap.matchmaking_user_id,
    mtwuap.status AS ticket_status,
    DENSE_RANK() OVER (
        PARTITION BY mm.id
        ORDER BY mtwuap.ticket_id
    ) AS ticket_number,
    mtwuap.ticket_data,
    mtwuap.expires_at,
    mtwuap.ticket_created_at,
    mtwuap.ticket_updated_at,
    mtwuap.client_user_id,
    mtwuap.elo,
    mtwuap.user_number,
    mtwuap.user_data,
    mtwuap.user_created_at,
    mtwuap.user_updated_at,
    mtwuap.arena_id AS ticket_arena_id,
    mtwuap.arena_name AS ticket_arena_name,
    mtwuap.arena_min_players AS ticket_arena_min_players,
    mtwuap.arena_max_players_per_ticket AS ticket_arena_max_players_per_ticket,
    mtwuap.arena_max_players AS ticket_arena_max_players,
    mtwuap.arena_number,
    mtwuap.arena_data AS ticket_arena_data,
    mtwuap.arena_created_at AS ticket_arena_created_at,
    mtwuap.arena_updated_at AS ticket_arena_updated_at
FROM matchmaking_match mm
    LEFT JOIN matchmaking_arena ma ON mm.matchmaking_arena_id = ma.id
    LEFT JOIN matchmaking_ticket_with_user_and_arena mtwuap ON mm.id = mtwuap.matchmaking_match_id
GROUP BY mm.id, mtwuap.ticket_id, mtwuap.matchmaking_user_id, mtwuap.arena_id
ORDER BY mm.id,
    mtwuap.ticket_id,
    mtwuap.matchmaking_user_id,
    mtwuap.arena_id;
    
    
    
-- Insert 50 Users
INSERT INTO matchmaking_user (client_user_id, elo, data) VALUES
(1001, 1200, '{"nickname": "PlayerOne", "level": 10}'),
(1002, 1400, '{"nickname": "PlayerTwo", "level": 15}'),
(1003, 1250, '{"nickname": "PlayerThree", "level": 8}'),
(1004, 1300, '{"nickname": "PlayerFour", "level": 20}'),
(1005, 1500, '{"nickname": "PlayerFive", "level": 12}'),
(1006, 1350, '{"nickname": "PlayerSix", "level": 7}'),
(1007, 1450, '{"nickname": "PlayerSeven", "level": 18}'),
(1008, 1100, '{"nickname": "PlayerEight", "level": 5}'),
(1009, 1150, '{"nickname": "PlayerNine", "level": 14}'),
(1010, 1250, '{"nickname": "PlayerTen", "level": 9}'),
(1011, 1380, '{"nickname": "PlayerEleven", "level": 12}'),
(1012, 1450, '{"nickname": "PlayerTwelve", "level": 16}'),
(1013, 1550, '{"nickname": "PlayerThirteen", "level": 22}'),
(1014, 1300, '{"nickname": "PlayerFourteen", "level": 11}'),
(1015, 1200, '{"nickname": "PlayerFifteen", "level": 10}'),
(1016, 1400, '{"nickname": "PlayerSixteen", "level": 13}'),
(1017, 1500, '{"nickname": "PlayerSeventeen", "level": 17}'),
(1018, 1320, '{"nickname": "PlayerEighteen", "level": 10}'),
(1019, 1280, '{"nickname": "PlayerNineteen", "level": 15}'),
(1020, 1430, '{"nickname": "PlayerTwenty", "level": 9}'),
(1021, 1350, '{"nickname": "PlayerTwentyOne", "level": 18}'),
(1022, 1270, '{"nickname": "PlayerTwentyTwo", "level": 8}'),
(1023, 1370, '{"nickname": "PlayerTwentyThree", "level": 7}'),
(1024, 1290, '{"nickname": "PlayerTwentyFour", "level": 6}'),
(1025, 1190, '{"nickname": "PlayerTwentyFive", "level": 11}'),
(1026, 1480, '{"nickname": "PlayerTwentySix", "level": 21}'),
(1027, 1550, '{"nickname": "PlayerTwentySeven", "level": 19}'),
(1028, 1340, '{"nickname": "PlayerTwentyEight", "level": 10}'),
(1029, 1360, '{"nickname": "PlayerTwentyNine", "level": 13}'),
(1030, 1300, '{"nickname": "PlayerThirty", "level": 12}'),
(1031, 1400, '{"nickname": "PlayerThirtyOne", "level": 8}'),
(1032, 1440, '{"nickname": "PlayerThirtyTwo", "level": 15}'),
(1033, 1290, '{"nickname": "PlayerThirtyThree", "level": 7}'),
(1034, 1180, '{"nickname": "PlayerThirtyFour", "level": 6}'),
(1035, 1210, '{"nickname": "PlayerThirtyFive", "level": 14}'),
(1036, 1450, '{"nickname": "PlayerThirtySix", "level": 18}'),
(1037, 1350, '{"nickname": "PlayerThirtySeven", "level": 20}'),
(1038, 1380, '{"nickname": "PlayerThirtyEight", "level": 9}'),
(1039, 1390, '{"nickname": "PlayerThirtyNine", "level": 10}'),
(1040, 1220, '{"nickname": "PlayerForty", "level": 5}'),
(1041, 1300, '{"nickname": "PlayerFortyOne", "level": 11}'),
(1042, 1400, '{"nickname": "PlayerFortyTwo", "level": 16}'),
(1043, 1240, '{"nickname": "PlayerFortyThree", "level": 8}'),
(1044, 1330, '{"nickname": "PlayerFortyFour", "level": 14}'),
(1045, 1420, '{"nickname": "PlayerFortyFive", "level": 9}'),
(1046, 1260, '{"nickname": "PlayerFortySix", "level": 7}'),
(1047, 1340, '{"nickname": "PlayerFortySeven", "level": 13}'),
(1048, 1500, '{"nickname": "PlayerFortyEight", "level": 21}'),
(1049, 1360, '{"nickname": "PlayerFortyNine", "level": 12}'),
(1050, 1390, '{"nickname": "PlayerFifty", "level": 10}');

-- Insert 10 Arenas
INSERT INTO matchmaking_arena (name, min_players, max_players_per_ticket, max_players, data) VALUES
('Arena A', 2, 5, 10, '{"type": "battlefield"}'),
('Arena B', 4, 6, 12, '{"type": "desert"}'),
('Arena C', 3, 5, 15, '{"type": "forest"}'),
('Arena D', 5, 6, 18, '{"type": "urban"}'),
('Arena E', 2, 4, 8, '{"type": "canyon"}'),
('Arena F', 4, 5, 10, '{"type": "space"}'),
('Arena G', 3, 4, 10, '{"type": "underwater"}'),
('Arena H', 5, 8, 20, '{"type": "volcano"}'),
('Arena I', 2, 4, 6, '{"type": "jungle"}'),
('Arena J', 4, 7, 16, '{"type": "arctic"}');

-- Insert 3 Matches
INSERT INTO matchmaking_match (matchmaking_arena_id, private_server_id, data, locked_at, started_at, ended_at) VALUES
(1, 'server_101', '{"match_type": "ranked", "map": "Arena A Map"}', NULL, '2024-11-01 10:00:00', NULL),
(2, 'server_102', '{"match_type": "casual", "map": "Arena B Map"}', '2024-11-02 11:00:00', NULL, NULL),
(3, 'server_103', '{"match_type": "tournament", "map": "Arena C Map"}', NULL, NULL, NULL);

-- Insert 10 Tickets for the Matches
INSERT INTO matchmaking_ticket (matchmaking_match_id, elo_window, data, expires_at) VALUES
(1, 200, '{"priority": "high", "queue": "solo"}', '2024-11-05 15:00:00'),
(1, 100, '{"priority": "medium", "queue": "duo"}', '2024-11-05 15:30:00'),
(1, 150, '{"priority": "high", "queue": "squad"}', '2024-11-05 16:00:00'),
(2, 180, '{"priority": "low", "queue": "custom"}', '2024-11-05 17:00:00'),
(2, 200, '{"priority": "medium", "queue": "solo"}', '2024-11-06 15:00:00'),
(2, 120, '{"priority": "high", "queue": "duo"}', '2024-11-06 15:30:00'),
(3, 250, '{"priority": "low", "queue": "squad"}', '2024-11-06 16:00:00'),
(3, 190, '{"priority": "medium", "queue": "custom"}', '2024-11-06 17:00:00'),
(3, 160, '{"priority": "high", "queue": "solo"}', '2024-11-07 15:00:00'),
(3, 140, '{"priority": "medium", "queue": "duo"}', '2024-11-07 15:30:00');

INSERT INTO matchmaking_ticket_user (matchmaking_ticket_id, matchmaking_user_id) VALUES
(1, 1), (1, 2), (1, 3), (1, 4),
(2, 5), (2, 6), 
(3, 7), (3, 8), (3, 9), (3, 10),
(4, 11), (4, 12), (4, 13), (4, 14),
(5, 15), (5, 16), (5, 17), 
(6, 18), (6, 19), (6, 20), 
(7, 21), (7, 22), (7, 23),
(8, 24), (8, 25), 
(9, 26), (9, 27), (9, 28), 
(10, 29), (10, 30), (10, 31),
(10, 32), (10, 33), (10, 34),
(10, 35), (10, 36), (10, 37),
(10, 38), (10, 39), (10, 40),
(10, 41), (10, 42), (10, 43),
(10, 44), (10, 45), (10, 46),
(10, 47), (10, 48), (10, 49),
(10, 50);


-- Link Tickets with Arenas
INSERT INTO matchmaking_ticket_arena (matchmaking_ticket_id, matchmaking_arena_id) VALUES
(1, 1), (1, 2), (1, 3), (1, 4),
(2, 1), (2, 2), (2, 3),
(3, 3), (3, 4), (3, 5),
(4, 2), (4, 3), (4, 5),
(5, 6), (5, 7), (5, 8), (5, 9),
(6, 6), (6, 8),
(7, 7), (7, 8), (7, 10),
(8, 9), (8, 10),
(9, 1), (9, 5), (9, 6),
(10, 2), (10, 4), (10, 7), (10, 10);


