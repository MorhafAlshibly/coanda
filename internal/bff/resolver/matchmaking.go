package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.75

import (
	"context"

	"github.com/MorhafAlshibly/coanda/api"
	"github.com/MorhafAlshibly/coanda/internal/bff"
	"github.com/MorhafAlshibly/coanda/internal/bff/model"
)

// Error is the resolver for the error field.
func (r *createArenaResponseResolver) Error(ctx context.Context, obj *api.CreateArenaResponse) (model.CreateArenaError, error) {
	return model.CreateArenaError(obj.Error.String()), nil
}

// Error is the resolver for the error field.
func (r *createMatchmakingTicketResponseResolver) Error(ctx context.Context, obj *api.CreateMatchmakingTicketResponse) (model.CreateMatchmakingTicketError, error) {
	return model.CreateMatchmakingTicketError(obj.Error.String()), nil
}

// Error is the resolver for the error field.
func (r *createMatchmakingUserResponseResolver) Error(ctx context.Context, obj *api.CreateMatchmakingUserResponse) (model.CreateMatchmakingUserError, error) {
	return model.CreateMatchmakingUserError(obj.Error.String()), nil
}

// Error is the resolver for the error field.
func (r *deleteMatchResponseResolver) Error(ctx context.Context, obj *api.DeleteMatchResponse) (model.DeleteMatchError, error) {
	return model.DeleteMatchError(obj.Error.String()), nil
}

// Error is the resolver for the error field.
func (r *deleteMatchmakingTicketResponseResolver) Error(ctx context.Context, obj *api.DeleteMatchmakingTicketResponse) (model.DeleteMatchmakingTicketError, error) {
	return model.DeleteMatchmakingTicketError(obj.Error.String()), nil
}

// Error is the resolver for the error field.
func (r *deleteMatchmakingUserResponseResolver) Error(ctx context.Context, obj *api.DeleteMatchmakingUserResponse) (model.DeleteMatchmakingUserError, error) {
	return model.DeleteMatchmakingUserError(obj.Error.String()), nil
}

// Error is the resolver for the error field.
func (r *endMatchResponseResolver) Error(ctx context.Context, obj *api.EndMatchResponse) (model.EndMatchError, error) {
	return model.EndMatchError(obj.Error.String()), nil
}

// Error is the resolver for the error field.
func (r *getArenaResponseResolver) Error(ctx context.Context, obj *api.GetArenaResponse) (model.GetArenaError, error) {
	return model.GetArenaError(obj.Error.String()), nil
}

// Error is the resolver for the error field.
func (r *getMatchResponseResolver) Error(ctx context.Context, obj *api.GetMatchResponse) (model.GetMatchError, error) {
	return model.GetMatchError(obj.Error.String()), nil
}

// Error is the resolver for the error field.
func (r *getMatchmakingTicketResponseResolver) Error(ctx context.Context, obj *api.GetMatchmakingTicketResponse) (model.GetMatchmakingTicketError, error) {
	return model.GetMatchmakingTicketError(obj.Error.String()), nil
}

// Error is the resolver for the error field.
func (r *getMatchmakingTicketsResponseResolver) Error(ctx context.Context, obj *api.GetMatchmakingTicketsResponse) (model.GetMatchmakingTicketsError, error) {
	return model.GetMatchmakingTicketsError(obj.Error.String()), nil
}

// Error is the resolver for the error field.
func (r *getMatchmakingUserResponseResolver) Error(ctx context.Context, obj *api.GetMatchmakingUserResponse) (model.GetMatchmakingUserError, error) {
	return model.GetMatchmakingUserError(obj.Error.String()), nil
}

// Status is the resolver for the status field.
func (r *matchResolver) Status(ctx context.Context, obj *api.Match) (model.MatchStatus, error) {
	return model.MatchStatus(obj.Status.String()), nil
}

// Status is the resolver for the status field.
func (r *matchmakingTicketResolver) Status(ctx context.Context, obj *api.MatchmakingTicket) (model.MatchmakingTicketStatus, error) {
	return model.MatchmakingTicketStatus(obj.Status.String()), nil
}

// CreateArena is the resolver for the CreateArena field.
func (r *mutationResolver) CreateArena(ctx context.Context, input *api.CreateArenaRequest) (*api.CreateArenaResponse, error) {
	return r.matchmakingClient.CreateArena(ctx, input)
}

// UpdateArena is the resolver for the UpdateArena field.
func (r *mutationResolver) UpdateArena(ctx context.Context, input *api.UpdateArenaRequest) (*api.UpdateArenaResponse, error) {
	return r.matchmakingClient.UpdateArena(ctx, input)
}

// CreateMatchmakingUser is the resolver for the CreateMatchmakingUser field.
func (r *mutationResolver) CreateMatchmakingUser(ctx context.Context, input *api.CreateMatchmakingUserRequest) (*api.CreateMatchmakingUserResponse, error) {
	return r.matchmakingClient.CreateMatchmakingUser(ctx, input)
}

// UpdateMatchmakingUser is the resolver for the UpdateMatchmakingUser field.
func (r *mutationResolver) UpdateMatchmakingUser(ctx context.Context, input *api.UpdateMatchmakingUserRequest) (*api.UpdateMatchmakingUserResponse, error) {
	return r.matchmakingClient.UpdateMatchmakingUser(ctx, input)
}

// DeleteMatchmakingUser is the resolver for the DeleteMatchmakingUser field.
func (r *mutationResolver) DeleteMatchmakingUser(ctx context.Context, input *api.MatchmakingUserRequest) (*api.DeleteMatchmakingUserResponse, error) {
	return r.matchmakingClient.DeleteMatchmakingUser(ctx, input)
}

// CreateMatchmakingTicket is the resolver for the CreateMatchmakingTicket field.
func (r *mutationResolver) CreateMatchmakingTicket(ctx context.Context, input *api.CreateMatchmakingTicketRequest) (*api.CreateMatchmakingTicketResponse, error) {
	return r.matchmakingClient.CreateMatchmakingTicket(ctx, input)
}

// UpdateMatchmakingTicket is the resolver for the UpdateMatchmakingTicket field.
func (r *mutationResolver) UpdateMatchmakingTicket(ctx context.Context, input *api.UpdateMatchmakingTicketRequest) (*api.UpdateMatchmakingTicketResponse, error) {
	return r.matchmakingClient.UpdateMatchmakingTicket(ctx, input)
}

// DeleteMatchmakingTicket is the resolver for the DeleteMatchmakingTicket field.
func (r *mutationResolver) DeleteMatchmakingTicket(ctx context.Context, input *api.MatchmakingTicketRequest) (*api.DeleteMatchmakingTicketResponse, error) {
	return r.matchmakingClient.DeleteMatchmakingTicket(ctx, input)
}

// StartMatch is the resolver for the StartMatch field.
func (r *mutationResolver) StartMatch(ctx context.Context, input *api.StartMatchRequest) (*api.StartMatchResponse, error) {
	return r.matchmakingClient.StartMatch(ctx, input)
}

// EndMatch is the resolver for the EndMatch field.
func (r *mutationResolver) EndMatch(ctx context.Context, input *api.EndMatchRequest) (*api.EndMatchResponse, error) {
	return r.matchmakingClient.EndMatch(ctx, input)
}

// UpdateMatch is the resolver for the UpdateMatch field.
func (r *mutationResolver) UpdateMatch(ctx context.Context, input *api.UpdateMatchRequest) (*api.UpdateMatchResponse, error) {
	return r.matchmakingClient.UpdateMatch(ctx, input)
}

// SetMatchPrivateServer is the resolver for the SetMatchPrivateServer field.
func (r *mutationResolver) SetMatchPrivateServer(ctx context.Context, input *api.SetMatchPrivateServerRequest) (*api.SetMatchPrivateServerResponse, error) {
	return r.matchmakingClient.SetMatchPrivateServer(ctx, input)
}

// DeleteMatch is the resolver for the DeleteMatch field.
func (r *mutationResolver) DeleteMatch(ctx context.Context, input *api.MatchRequest) (*api.DeleteMatchResponse, error) {
	return r.matchmakingClient.DeleteMatch(ctx, input)
}

// GetArena is the resolver for the GetArena field.
func (r *queryResolver) GetArena(ctx context.Context, input *api.ArenaRequest) (*api.GetArenaResponse, error) {
	return r.matchmakingClient.GetArena(ctx, input)
}

// GetArenas is the resolver for the GetArenas field.
func (r *queryResolver) GetArenas(ctx context.Context, input *api.Pagination) (*api.GetArenasResponse, error) {
	return r.matchmakingClient.GetArenas(ctx, input)
}

// GetMatchmakingUser is the resolver for the GetMatchmakingUser field.
func (r *queryResolver) GetMatchmakingUser(ctx context.Context, input *api.MatchmakingUserRequest) (*api.GetMatchmakingUserResponse, error) {
	return r.matchmakingClient.GetMatchmakingUser(ctx, input)
}

// GetMatchmakingUsers is the resolver for the GetMatchmakingUsers field.
func (r *queryResolver) GetMatchmakingUsers(ctx context.Context, input *api.Pagination) (*api.GetMatchmakingUsersResponse, error) {
	return r.matchmakingClient.GetMatchmakingUsers(ctx, input)
}

// GetMatchmakingTicket is the resolver for the GetMatchmakingTicket field.
func (r *queryResolver) GetMatchmakingTicket(ctx context.Context, input *api.GetMatchmakingTicketRequest) (*api.GetMatchmakingTicketResponse, error) {
	return r.matchmakingClient.GetMatchmakingTicket(ctx, input)
}

// GetMatchmakingTickets is the resolver for the GetMatchmakingTickets field.
func (r *queryResolver) GetMatchmakingTickets(ctx context.Context, input *api.GetMatchmakingTicketsRequest) (*api.GetMatchmakingTicketsResponse, error) {
	return r.matchmakingClient.GetMatchmakingTickets(ctx, input)
}

// GetMatch is the resolver for the GetMatch field.
func (r *queryResolver) GetMatch(ctx context.Context, input *api.GetMatchRequest) (*api.GetMatchResponse, error) {
	return r.matchmakingClient.GetMatch(ctx, input)
}

// GetMatches is the resolver for the GetMatches field.
func (r *queryResolver) GetMatches(ctx context.Context, input *api.GetMatchesRequest) (*api.GetMatchesResponse, error) {
	return r.matchmakingClient.GetMatches(ctx, input)
}

// Error is the resolver for the error field.
func (r *setMatchPrivateServerResponseResolver) Error(ctx context.Context, obj *api.SetMatchPrivateServerResponse) (model.SetMatchPrivateServerError, error) {
	return model.SetMatchPrivateServerError(obj.Error.String()), nil
}

// Error is the resolver for the error field.
func (r *startMatchResponseResolver) Error(ctx context.Context, obj *api.StartMatchResponse) (model.StartMatchError, error) {
	return model.StartMatchError(obj.Error.String()), nil
}

// Error is the resolver for the error field.
func (r *updateArenaResponseResolver) Error(ctx context.Context, obj *api.UpdateArenaResponse) (model.UpdateArenaError, error) {
	return model.UpdateArenaError(obj.Error.String()), nil
}

// Error is the resolver for the error field.
func (r *updateMatchResponseResolver) Error(ctx context.Context, obj *api.UpdateMatchResponse) (model.UpdateMatchError, error) {
	return model.UpdateMatchError(obj.Error.String()), nil
}

// Error is the resolver for the error field.
func (r *updateMatchmakingTicketResponseResolver) Error(ctx context.Context, obj *api.UpdateMatchmakingTicketResponse) (model.UpdateMatchmakingTicketError, error) {
	return model.UpdateMatchmakingTicketError(obj.Error.String()), nil
}

// Error is the resolver for the error field.
func (r *updateMatchmakingUserResponseResolver) Error(ctx context.Context, obj *api.UpdateMatchmakingUserResponse) (model.UpdateMatchmakingUserError, error) {
	return model.UpdateMatchmakingUserError(obj.Error.String()), nil
}

// Statuses is the resolver for the statuses field.
func (r *getMatchesRequestResolver) Statuses(ctx context.Context, obj *api.GetMatchesRequest, data []*model.MatchStatus) error {
	statuses := make([]api.Match_Status, len(obj.Statuses))
	for i, status := range data {
		statuses[i] = api.Match_Status(api.Match_Status_value[status.String()])
	}
	obj.Statuses = statuses
	return nil
}

// Statuses is the resolver for the statuses field.
func (r *getMatchmakingTicketsRequestResolver) Statuses(ctx context.Context, obj *api.GetMatchmakingTicketsRequest, data []*model.MatchmakingTicketStatus) error {
	statuses := make([]api.MatchmakingTicket_Status, len(obj.Statuses))
	for i, status := range data {
		statuses[i] = api.MatchmakingTicket_Status(api.MatchmakingTicket_Status_value[status.String()])
	}
	obj.Statuses = statuses
	return nil
}

// CreateArenaResponse returns bff.CreateArenaResponseResolver implementation.
func (r *Resolver) CreateArenaResponse() bff.CreateArenaResponseResolver {
	return &createArenaResponseResolver{r}
}

// CreateMatchmakingTicketResponse returns bff.CreateMatchmakingTicketResponseResolver implementation.
func (r *Resolver) CreateMatchmakingTicketResponse() bff.CreateMatchmakingTicketResponseResolver {
	return &createMatchmakingTicketResponseResolver{r}
}

// CreateMatchmakingUserResponse returns bff.CreateMatchmakingUserResponseResolver implementation.
func (r *Resolver) CreateMatchmakingUserResponse() bff.CreateMatchmakingUserResponseResolver {
	return &createMatchmakingUserResponseResolver{r}
}

// DeleteMatchResponse returns bff.DeleteMatchResponseResolver implementation.
func (r *Resolver) DeleteMatchResponse() bff.DeleteMatchResponseResolver {
	return &deleteMatchResponseResolver{r}
}

// DeleteMatchmakingTicketResponse returns bff.DeleteMatchmakingTicketResponseResolver implementation.
func (r *Resolver) DeleteMatchmakingTicketResponse() bff.DeleteMatchmakingTicketResponseResolver {
	return &deleteMatchmakingTicketResponseResolver{r}
}

// DeleteMatchmakingUserResponse returns bff.DeleteMatchmakingUserResponseResolver implementation.
func (r *Resolver) DeleteMatchmakingUserResponse() bff.DeleteMatchmakingUserResponseResolver {
	return &deleteMatchmakingUserResponseResolver{r}
}

// EndMatchResponse returns bff.EndMatchResponseResolver implementation.
func (r *Resolver) EndMatchResponse() bff.EndMatchResponseResolver {
	return &endMatchResponseResolver{r}
}

// GetArenaResponse returns bff.GetArenaResponseResolver implementation.
func (r *Resolver) GetArenaResponse() bff.GetArenaResponseResolver {
	return &getArenaResponseResolver{r}
}

// GetMatchResponse returns bff.GetMatchResponseResolver implementation.
func (r *Resolver) GetMatchResponse() bff.GetMatchResponseResolver {
	return &getMatchResponseResolver{r}
}

// GetMatchmakingTicketResponse returns bff.GetMatchmakingTicketResponseResolver implementation.
func (r *Resolver) GetMatchmakingTicketResponse() bff.GetMatchmakingTicketResponseResolver {
	return &getMatchmakingTicketResponseResolver{r}
}

// GetMatchmakingTicketsResponse returns bff.GetMatchmakingTicketsResponseResolver implementation.
func (r *Resolver) GetMatchmakingTicketsResponse() bff.GetMatchmakingTicketsResponseResolver {
	return &getMatchmakingTicketsResponseResolver{r}
}

// GetMatchmakingUserResponse returns bff.GetMatchmakingUserResponseResolver implementation.
func (r *Resolver) GetMatchmakingUserResponse() bff.GetMatchmakingUserResponseResolver {
	return &getMatchmakingUserResponseResolver{r}
}

// Match returns bff.MatchResolver implementation.
func (r *Resolver) Match() bff.MatchResolver { return &matchResolver{r} }

// MatchmakingTicket returns bff.MatchmakingTicketResolver implementation.
func (r *Resolver) MatchmakingTicket() bff.MatchmakingTicketResolver {
	return &matchmakingTicketResolver{r}
}

// SetMatchPrivateServerResponse returns bff.SetMatchPrivateServerResponseResolver implementation.
func (r *Resolver) SetMatchPrivateServerResponse() bff.SetMatchPrivateServerResponseResolver {
	return &setMatchPrivateServerResponseResolver{r}
}

// StartMatchResponse returns bff.StartMatchResponseResolver implementation.
func (r *Resolver) StartMatchResponse() bff.StartMatchResponseResolver {
	return &startMatchResponseResolver{r}
}

// UpdateArenaResponse returns bff.UpdateArenaResponseResolver implementation.
func (r *Resolver) UpdateArenaResponse() bff.UpdateArenaResponseResolver {
	return &updateArenaResponseResolver{r}
}

// UpdateMatchResponse returns bff.UpdateMatchResponseResolver implementation.
func (r *Resolver) UpdateMatchResponse() bff.UpdateMatchResponseResolver {
	return &updateMatchResponseResolver{r}
}

// UpdateMatchmakingTicketResponse returns bff.UpdateMatchmakingTicketResponseResolver implementation.
func (r *Resolver) UpdateMatchmakingTicketResponse() bff.UpdateMatchmakingTicketResponseResolver {
	return &updateMatchmakingTicketResponseResolver{r}
}

// UpdateMatchmakingUserResponse returns bff.UpdateMatchmakingUserResponseResolver implementation.
func (r *Resolver) UpdateMatchmakingUserResponse() bff.UpdateMatchmakingUserResponseResolver {
	return &updateMatchmakingUserResponseResolver{r}
}

// GetMatchesRequest returns bff.GetMatchesRequestResolver implementation.
func (r *Resolver) GetMatchesRequest() bff.GetMatchesRequestResolver {
	return &getMatchesRequestResolver{r}
}

// GetMatchmakingTicketsRequest returns bff.GetMatchmakingTicketsRequestResolver implementation.
func (r *Resolver) GetMatchmakingTicketsRequest() bff.GetMatchmakingTicketsRequestResolver {
	return &getMatchmakingTicketsRequestResolver{r}
}

type createArenaResponseResolver struct{ *Resolver }
type createMatchmakingTicketResponseResolver struct{ *Resolver }
type createMatchmakingUserResponseResolver struct{ *Resolver }
type deleteMatchResponseResolver struct{ *Resolver }
type deleteMatchmakingTicketResponseResolver struct{ *Resolver }
type deleteMatchmakingUserResponseResolver struct{ *Resolver }
type endMatchResponseResolver struct{ *Resolver }
type getArenaResponseResolver struct{ *Resolver }
type getMatchResponseResolver struct{ *Resolver }
type getMatchmakingTicketResponseResolver struct{ *Resolver }
type getMatchmakingTicketsResponseResolver struct{ *Resolver }
type getMatchmakingUserResponseResolver struct{ *Resolver }
type matchResolver struct{ *Resolver }
type matchmakingTicketResolver struct{ *Resolver }
type setMatchPrivateServerResponseResolver struct{ *Resolver }
type startMatchResponseResolver struct{ *Resolver }
type updateArenaResponseResolver struct{ *Resolver }
type updateMatchResponseResolver struct{ *Resolver }
type updateMatchmakingTicketResponseResolver struct{ *Resolver }
type updateMatchmakingUserResponseResolver struct{ *Resolver }
type getMatchesRequestResolver struct{ *Resolver }
type getMatchmakingTicketsRequestResolver struct{ *Resolver }
