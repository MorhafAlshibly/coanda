package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.75

import (
	"context"

	"github.com/MorhafAlshibly/coanda/api"
	"github.com/MorhafAlshibly/coanda/internal/bff"
	"github.com/MorhafAlshibly/coanda/internal/bff/model"
)

// Error is the resolver for the error field.
func (r *createItemResponseResolver) Error(ctx context.Context, obj *api.CreateItemResponse) (model.CreateItemError, error) {
	return model.CreateItemError(obj.Error.String()), nil
}

// Error is the resolver for the error field.
func (r *getItemResponseResolver) Error(ctx context.Context, obj *api.GetItemResponse) (model.GetItemError, error) {
	return model.GetItemError(obj.Error.String()), nil
}

// Error is the resolver for the error field.
func (r *itemResponseResolver) Error(ctx context.Context, obj *api.ItemResponse) (model.ItemError, error) {
	return model.ItemError(obj.Error.String()), nil
}

// CreateItem is the resolver for the CreateItem field.
func (r *mutationResolver) CreateItem(ctx context.Context, input *api.CreateItemRequest) (*api.CreateItemResponse, error) {
	return r.itemClient.CreateItem(ctx, input)
}

// UpdateItem is the resolver for the UpdateItem field.
func (r *mutationResolver) UpdateItem(ctx context.Context, input *api.UpdateItemRequest) (*api.UpdateItemResponse, error) {
	return r.itemClient.UpdateItem(ctx, input)
}

// DeleteItem is the resolver for the DeleteItem field.
func (r *mutationResolver) DeleteItem(ctx context.Context, input *api.ItemRequest) (*api.ItemResponse, error) {
	return r.itemClient.DeleteItem(ctx, input)
}

// GetItem is the resolver for the GetItem field.
func (r *queryResolver) GetItem(ctx context.Context, input *api.ItemRequest) (*api.GetItemResponse, error) {
	return r.itemClient.GetItem(ctx, input)
}

// GetItems is the resolver for the GetItems field.
func (r *queryResolver) GetItems(ctx context.Context, input *api.GetItemsRequest) (*api.GetItemsResponse, error) {
	return r.itemClient.GetItems(ctx, input)
}

// Error is the resolver for the error field.
func (r *updateItemResponseResolver) Error(ctx context.Context, obj *api.UpdateItemResponse) (model.UpdateItemError, error) {
	return model.UpdateItemError(obj.Error.String()), nil
}

// CreateItemResponse returns bff.CreateItemResponseResolver implementation.
func (r *Resolver) CreateItemResponse() bff.CreateItemResponseResolver {
	return &createItemResponseResolver{r}
}

// GetItemResponse returns bff.GetItemResponseResolver implementation.
func (r *Resolver) GetItemResponse() bff.GetItemResponseResolver { return &getItemResponseResolver{r} }

// ItemResponse returns bff.ItemResponseResolver implementation.
func (r *Resolver) ItemResponse() bff.ItemResponseResolver { return &itemResponseResolver{r} }

// UpdateItemResponse returns bff.UpdateItemResponseResolver implementation.
func (r *Resolver) UpdateItemResponse() bff.UpdateItemResponseResolver {
	return &updateItemResponseResolver{r}
}

type createItemResponseResolver struct{ *Resolver }
type getItemResponseResolver struct{ *Resolver }
type itemResponseResolver struct{ *Resolver }
type updateItemResponseResolver struct{ *Resolver }
