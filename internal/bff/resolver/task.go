package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.75

import (
	"context"

	"github.com/MorhafAlshibly/coanda/api"
	"github.com/MorhafAlshibly/coanda/internal/bff"
	"github.com/MorhafAlshibly/coanda/internal/bff/model"
)

// Error is the resolver for the error field.
func (r *completeTaskResponseResolver) Error(ctx context.Context, obj *api.CompleteTaskResponse) (model.CompleteTaskError, error) {
	return model.CompleteTaskError(obj.Error.String()), nil
}

// Error is the resolver for the error field.
func (r *createTaskResponseResolver) Error(ctx context.Context, obj *api.CreateTaskResponse) (model.CreateTaskError, error) {
	return model.CreateTaskError(obj.Error.String()), nil
}

// Error is the resolver for the error field.
func (r *getTaskResponseResolver) Error(ctx context.Context, obj *api.GetTaskResponse) (model.GetTaskError, error) {
	return model.GetTaskError(obj.Error.String()), nil
}

// CreateTask is the resolver for the CreateTask field.
func (r *mutationResolver) CreateTask(ctx context.Context, input *api.CreateTaskRequest) (*api.CreateTaskResponse, error) {
	return r.taskClient.CreateTask(ctx, input)
}

// UpdateTask is the resolver for the UpdateTask field.
func (r *mutationResolver) UpdateTask(ctx context.Context, input *api.UpdateTaskRequest) (*api.UpdateTaskResponse, error) {
	return r.taskClient.UpdateTask(ctx, input)
}

// CompleteTask is the resolver for the CompleteTask field.
func (r *mutationResolver) CompleteTask(ctx context.Context, input *api.TaskRequest) (*api.CompleteTaskResponse, error) {
	return r.taskClient.CompleteTask(ctx, input)
}

// DeleteTask is the resolver for the DeleteTask field.
func (r *mutationResolver) DeleteTask(ctx context.Context, input *api.TaskRequest) (*api.TaskResponse, error) {
	return r.taskClient.DeleteTask(ctx, input)
}

// GetTask is the resolver for the GetTask field.
func (r *queryResolver) GetTask(ctx context.Context, input *api.TaskRequest) (*api.GetTaskResponse, error) {
	return r.taskClient.GetTask(ctx, input)
}

// GetTasks is the resolver for the GetTasks field.
func (r *queryResolver) GetTasks(ctx context.Context, input *api.GetTasksRequest) (*api.GetTasksResponse, error) {
	return r.taskClient.GetTasks(ctx, input)
}

// Error is the resolver for the error field.
func (r *taskResponseResolver) Error(ctx context.Context, obj *api.TaskResponse) (model.TaskError, error) {
	return model.TaskError(obj.Error.String()), nil
}

// Error is the resolver for the error field.
func (r *updateTaskResponseResolver) Error(ctx context.Context, obj *api.UpdateTaskResponse) (model.UpdateTaskError, error) {
	return model.UpdateTaskError(obj.Error.String()), nil
}

// CompleteTaskResponse returns bff.CompleteTaskResponseResolver implementation.
func (r *Resolver) CompleteTaskResponse() bff.CompleteTaskResponseResolver {
	return &completeTaskResponseResolver{r}
}

// CreateTaskResponse returns bff.CreateTaskResponseResolver implementation.
func (r *Resolver) CreateTaskResponse() bff.CreateTaskResponseResolver {
	return &createTaskResponseResolver{r}
}

// GetTaskResponse returns bff.GetTaskResponseResolver implementation.
func (r *Resolver) GetTaskResponse() bff.GetTaskResponseResolver { return &getTaskResponseResolver{r} }

// TaskResponse returns bff.TaskResponseResolver implementation.
func (r *Resolver) TaskResponse() bff.TaskResponseResolver { return &taskResponseResolver{r} }

// UpdateTaskResponse returns bff.UpdateTaskResponseResolver implementation.
func (r *Resolver) UpdateTaskResponse() bff.UpdateTaskResponseResolver {
	return &updateTaskResponseResolver{r}
}

type completeTaskResponseResolver struct{ *Resolver }
type createTaskResponseResolver struct{ *Resolver }
type getTaskResponseResolver struct{ *Resolver }
type taskResponseResolver struct{ *Resolver }
type updateTaskResponseResolver struct{ *Resolver }
