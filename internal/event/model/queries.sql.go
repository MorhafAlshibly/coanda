// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: queries.sql

package model

import (
	"context"
	"database/sql"
	"encoding/json"
	"time"
)

const CreateEvent = `-- name: CreateEvent :execresult
INSERT INTO event (name, data, started_at)
VALUES (?, ?, ?)
`

type CreateEventParams struct {
	Name      string          `db:"name"`
	Data      json.RawMessage `db:"data"`
	StartedAt time.Time       `db:"started_at"`
}

func (q *Queries) CreateEvent(ctx context.Context, arg CreateEventParams) (sql.Result, error) {
	return q.db.ExecContext(ctx, CreateEvent, arg.Name, arg.Data, arg.StartedAt)
}

const CreateEventRound = `-- name: CreateEventRound :execresult
INSERT INTO event_round (event_id, name, data, scoring, ended_at)
VALUES (?, ?, ?, ?, ?)
`

type CreateEventRoundParams struct {
	EventID uint64          `db:"event_id"`
	Name    string          `db:"name"`
	Data    json.RawMessage `db:"data"`
	Scoring json.RawMessage `db:"scoring"`
	EndedAt time.Time       `db:"ended_at"`
}

func (q *Queries) CreateEventRound(ctx context.Context, arg CreateEventRoundParams) (sql.Result, error) {
	return q.db.ExecContext(ctx, CreateEventRound,
		arg.EventID,
		arg.Name,
		arg.Data,
		arg.Scoring,
		arg.EndedAt,
	)
}
