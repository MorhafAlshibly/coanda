// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0

package model

import (
	"database/sql"
	"encoding/json"
	"time"
)

type Event struct {
	ID        uint64          `db:"id"`
	Name      string          `db:"name"`
	Data      json.RawMessage `db:"data"`
	StartedAt time.Time       `db:"started_at"`
	CreatedAt time.Time       `db:"created_at"`
	UpdatedAt time.Time       `db:"updated_at"`
}

type EventLeaderboard struct {
	ID        uint64          `db:"id"`
	EventID   uint64          `db:"event_id"`
	UserID    uint64          `db:"user_id"`
	Score     uint64          `db:"score"`
	Ranking   uint64          `db:"ranking"`
	Data      json.RawMessage `db:"data"`
	CreatedAt time.Time       `db:"created_at"`
	UpdatedAt time.Time       `db:"updated_at"`
}

type EventRound struct {
	ID        uint64          `db:"id"`
	EventID   uint64          `db:"event_id"`
	Name      string          `db:"name"`
	Scoring   json.RawMessage `db:"scoring"`
	Data      json.RawMessage `db:"data"`
	EndedAt   time.Time       `db:"ended_at"`
	CreatedAt time.Time       `db:"created_at"`
	UpdatedAt time.Time       `db:"updated_at"`
}

type EventRoundLeaderboard struct {
	ID           uint64    `db:"id"`
	EventUserID  uint64    `db:"event_user_id"`
	EventRoundID uint64    `db:"event_round_id"`
	Result       uint64    `db:"result"`
	Score        uint64    `db:"score"`
	Ranking      uint64    `db:"ranking"`
	CreatedAt    time.Time `db:"created_at"`
	UpdatedAt    time.Time `db:"updated_at"`
}

type EventRoundUser struct {
	ID           uint64          `db:"id"`
	EventUserID  uint64          `db:"event_user_id"`
	EventRoundID uint64          `db:"event_round_id"`
	Result       uint64          `db:"result"`
	Data         json.RawMessage `db:"data"`
	CreatedAt    time.Time       `db:"created_at"`
	UpdatedAt    time.Time       `db:"updated_at"`
}

type EventUser struct {
	ID        uint64          `db:"id"`
	EventID   uint64          `db:"event_id"`
	UserID    uint64          `db:"user_id"`
	Data      json.RawMessage `db:"data"`
	CreatedAt time.Time       `db:"created_at"`
	UpdatedAt time.Time       `db:"updated_at"`
}

type EventWithRound struct {
	ID               uint64          `db:"id"`
	Name             string          `db:"name"`
	CurrentRoundID   uint64          `db:"current_round_id"`
	CurrentRoundName string          `db:"current_round_name"`
	Data             json.RawMessage `db:"data"`
	RoundID          sql.NullInt64   `db:"round_id"`
	RoundName        sql.NullString  `db:"round_name"`
	RoundScoring     json.RawMessage `db:"round_scoring"`
	RoundData        json.RawMessage `db:"round_data"`
	RoundEndedAt     sql.NullTime    `db:"round_ended_at"`
	RoundCreatedAt   sql.NullTime    `db:"round_created_at"`
	RoundUpdatedAt   sql.NullTime    `db:"round_updated_at"`
	StartedAt        time.Time       `db:"started_at"`
	CreatedAt        time.Time       `db:"created_at"`
	UpdatedAt        time.Time       `db:"updated_at"`
}
