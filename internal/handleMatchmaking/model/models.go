// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0

package model

import (
	"database/sql"
	"encoding/json"
	"time"
)

type MatchmakingArena struct {
	ID                  uint64          `db:"id"`
	Name                string          `db:"name"`
	MinPlayers          uint32          `db:"min_players"`
	MaxPlayersPerTicket uint32          `db:"max_players_per_ticket"`
	MaxPlayers          uint32          `db:"max_players"`
	Data                json.RawMessage `db:"data"`
	CreatedAt           time.Time       `db:"created_at"`
	UpdatedAt           time.Time       `db:"updated_at"`
}

type MatchmakingMatch struct {
	ID                 uint64          `db:"id"`
	MatchmakingArenaID uint64          `db:"matchmaking_arena_id"`
	PrivateServerID    sql.NullString  `db:"private_server_id"`
	Data               json.RawMessage `db:"data"`
	LockedAt           sql.NullTime    `db:"locked_at"`
	StartedAt          sql.NullTime    `db:"started_at"`
	EndedAt            sql.NullTime    `db:"ended_at"`
	CreatedAt          time.Time       `db:"created_at"`
	UpdatedAt          time.Time       `db:"updated_at"`
}

type MatchmakingMatchWithArena struct {
	MatchID                  uint64          `db:"match_id"`
	PrivateServerID          sql.NullString  `db:"private_server_id"`
	MatchStatus              string          `db:"match_status"`
	MatchData                json.RawMessage `db:"match_data"`
	LockedAt                 sql.NullTime    `db:"locked_at"`
	StartedAt                sql.NullTime    `db:"started_at"`
	EndedAt                  sql.NullTime    `db:"ended_at"`
	MatchCreatedAt           time.Time       `db:"match_created_at"`
	MatchUpdatedAt           time.Time       `db:"match_updated_at"`
	ArenaID                  uint64          `db:"arena_id"`
	ArenaName                string          `db:"arena_name"`
	ArenaMinPlayers          uint32          `db:"arena_min_players"`
	ArenaMaxPlayersPerTicket uint32          `db:"arena_max_players_per_ticket"`
	ArenaMaxPlayers          uint32          `db:"arena_max_players"`
	ArenaData                json.RawMessage `db:"arena_data"`
	ArenaCreatedAt           time.Time       `db:"arena_created_at"`
	ArenaUpdatedAt           time.Time       `db:"arena_updated_at"`
}

type MatchmakingMatchWithArenaAndTicket struct {
	MatchID                        uint64          `db:"match_id"`
	PrivateServerID                sql.NullString  `db:"private_server_id"`
	MatchStatus                    string          `db:"match_status"`
	TicketCount                    int32           `db:"ticket_count"`
	UserCount                      int32           `db:"user_count"`
	MatchData                      json.RawMessage `db:"match_data"`
	LockedAt                       sql.NullTime    `db:"locked_at"`
	StartedAt                      sql.NullTime    `db:"started_at"`
	EndedAt                        sql.NullTime    `db:"ended_at"`
	MatchCreatedAt                 time.Time       `db:"match_created_at"`
	MatchUpdatedAt                 time.Time       `db:"match_updated_at"`
	ArenaID                        uint64          `db:"arena_id"`
	ArenaName                      string          `db:"arena_name"`
	ArenaMinPlayers                uint32          `db:"arena_min_players"`
	ArenaMaxPlayersPerTicket       uint32          `db:"arena_max_players_per_ticket"`
	ArenaMaxPlayers                uint32          `db:"arena_max_players"`
	ArenaData                      json.RawMessage `db:"arena_data"`
	ArenaCreatedAt                 time.Time       `db:"arena_created_at"`
	ArenaUpdatedAt                 time.Time       `db:"arena_updated_at"`
	TicketID                       sql.NullInt64   `db:"ticket_id"`
	MatchmakingUserID              sql.NullInt64   `db:"matchmaking_user_id"`
	TicketStatus                   sql.NullString  `db:"ticket_status"`
	TicketUserCount                interface{}     `db:"ticket_user_count"`
	TicketNumber                   interface{}     `db:"ticket_number"`
	TicketData                     json.RawMessage `db:"ticket_data"`
	TicketCreatedAt                sql.NullTime    `db:"ticket_created_at"`
	TicketUpdatedAt                sql.NullTime    `db:"ticket_updated_at"`
	ClientUserID                   sql.NullInt64   `db:"client_user_id"`
	Elo                            sql.NullInt64   `db:"elo"`
	UserNumber                     interface{}     `db:"user_number"`
	UserData                       json.RawMessage `db:"user_data"`
	UserCreatedAt                  sql.NullTime    `db:"user_created_at"`
	UserUpdatedAt                  sql.NullTime    `db:"user_updated_at"`
	TicketArenaID                  sql.NullInt64   `db:"ticket_arena_id"`
	TicketArenaName                sql.NullString  `db:"ticket_arena_name"`
	TicketArenaMinPlayers          sql.NullInt32   `db:"ticket_arena_min_players"`
	TicketArenaMaxPlayersPerTicket sql.NullInt32   `db:"ticket_arena_max_players_per_ticket"`
	TicketArenaMaxPlayers          sql.NullInt32   `db:"ticket_arena_max_players"`
	ArenaNumber                    interface{}     `db:"arena_number"`
	TicketArenaData                json.RawMessage `db:"ticket_arena_data"`
	TicketArenaCreatedAt           sql.NullTime    `db:"ticket_arena_created_at"`
	TicketArenaUpdatedAt           sql.NullTime    `db:"ticket_arena_updated_at"`
}

type MatchmakingTicket struct {
	ID                 uint64          `db:"id"`
	MatchmakingMatchID sql.NullInt64   `db:"matchmaking_match_id"`
	Data               json.RawMessage `db:"data"`
	CreatedAt          time.Time       `db:"created_at"`
	UpdatedAt          time.Time       `db:"updated_at"`
}

type MatchmakingTicketArena struct {
	MatchmakingTicketID uint64 `db:"matchmaking_ticket_id"`
	MatchmakingArenaID  uint64 `db:"matchmaking_arena_id"`
}

type MatchmakingTicketWithUser struct {
	TicketID           uint64          `db:"ticket_id"`
	MatchmakingMatchID sql.NullInt64   `db:"matchmaking_match_id"`
	Status             string          `db:"status"`
	UserCount          interface{}     `db:"user_count"`
	TicketData         json.RawMessage `db:"ticket_data"`
	TicketCreatedAt    time.Time       `db:"ticket_created_at"`
	TicketUpdatedAt    time.Time       `db:"ticket_updated_at"`
	MatchmakingUserID  uint64          `db:"matchmaking_user_id"`
	ClientUserID       uint64          `db:"client_user_id"`
	Elo                int64           `db:"elo"`
	UserNumber         interface{}     `db:"user_number"`
	UserData           json.RawMessage `db:"user_data"`
	UserCreatedAt      time.Time       `db:"user_created_at"`
	UserUpdatedAt      time.Time       `db:"user_updated_at"`
}

type MatchmakingTicketWithUserAndArena struct {
	TicketID                 uint64          `db:"ticket_id"`
	MatchmakingMatchID       sql.NullInt64   `db:"matchmaking_match_id"`
	Status                   string          `db:"status"`
	UserCount                interface{}     `db:"user_count"`
	TicketData               json.RawMessage `db:"ticket_data"`
	TicketCreatedAt          time.Time       `db:"ticket_created_at"`
	TicketUpdatedAt          time.Time       `db:"ticket_updated_at"`
	MatchmakingUserID        uint64          `db:"matchmaking_user_id"`
	ClientUserID             uint64          `db:"client_user_id"`
	Elo                      int64           `db:"elo"`
	UserNumber               interface{}     `db:"user_number"`
	UserData                 json.RawMessage `db:"user_data"`
	UserCreatedAt            time.Time       `db:"user_created_at"`
	UserUpdatedAt            time.Time       `db:"user_updated_at"`
	ArenaID                  uint64          `db:"arena_id"`
	ArenaName                string          `db:"arena_name"`
	ArenaMinPlayers          uint32          `db:"arena_min_players"`
	ArenaMaxPlayersPerTicket uint32          `db:"arena_max_players_per_ticket"`
	ArenaMaxPlayers          uint32          `db:"arena_max_players"`
	ArenaNumber              interface{}     `db:"arena_number"`
	ArenaData                json.RawMessage `db:"arena_data"`
	ArenaCreatedAt           time.Time       `db:"arena_created_at"`
	ArenaUpdatedAt           time.Time       `db:"arena_updated_at"`
}

type MatchmakingUser struct {
	ID                  uint64          `db:"id"`
	MatchmakingTicketID sql.NullInt64   `db:"matchmaking_ticket_id"`
	ClientUserID        uint64          `db:"client_user_id"`
	Elo                 int64           `db:"elo"`
	Data                json.RawMessage `db:"data"`
	CreatedAt           time.Time       `db:"created_at"`
	UpdatedAt           time.Time       `db:"updated_at"`
}
