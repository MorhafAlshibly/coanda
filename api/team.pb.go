// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.3
// source: team.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTeamResponse_Error int32

const (
	CreateTeamResponse_NONE             CreateTeamResponse_Error = 0
	CreateTeamResponse_NAME_TOO_SHORT   CreateTeamResponse_Error = 1
	CreateTeamResponse_NAME_TAKEN       CreateTeamResponse_Error = 2
	CreateTeamResponse_OWNER_TAKEN      CreateTeamResponse_Error = 3
	CreateTeamResponse_TOO_MANY_MEMBERS CreateTeamResponse_Error = 4
)

// Enum value maps for CreateTeamResponse_Error.
var (
	CreateTeamResponse_Error_name = map[int32]string{
		0: "NONE",
		1: "NAME_TOO_SHORT",
		2: "NAME_TAKEN",
		3: "OWNER_TAKEN",
		4: "TOO_MANY_MEMBERS",
	}
	CreateTeamResponse_Error_value = map[string]int32{
		"NONE":             0,
		"NAME_TOO_SHORT":   1,
		"NAME_TAKEN":       2,
		"OWNER_TAKEN":      3,
		"TOO_MANY_MEMBERS": 4,
	}
)

func (x CreateTeamResponse_Error) Enum() *CreateTeamResponse_Error {
	p := new(CreateTeamResponse_Error)
	*p = x
	return p
}

func (x CreateTeamResponse_Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateTeamResponse_Error) Descriptor() protoreflect.EnumDescriptor {
	return file_team_proto_enumTypes[0].Descriptor()
}

func (CreateTeamResponse_Error) Type() protoreflect.EnumType {
	return &file_team_proto_enumTypes[0]
}

func (x CreateTeamResponse_Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateTeamResponse_Error.Descriptor instead.
func (CreateTeamResponse_Error) EnumDescriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{1, 0}
}

type GetTeamResponse_Error int32

const (
	GetTeamResponse_NONE      GetTeamResponse_Error = 0
	GetTeamResponse_INVALID   GetTeamResponse_Error = 1
	GetTeamResponse_NOT_FOUND GetTeamResponse_Error = 2
)

// Enum value maps for GetTeamResponse_Error.
var (
	GetTeamResponse_Error_name = map[int32]string{
		0: "NONE",
		1: "INVALID",
		2: "NOT_FOUND",
	}
	GetTeamResponse_Error_value = map[string]int32{
		"NONE":      0,
		"INVALID":   1,
		"NOT_FOUND": 2,
	}
)

func (x GetTeamResponse_Error) Enum() *GetTeamResponse_Error {
	p := new(GetTeamResponse_Error)
	*p = x
	return p
}

func (x GetTeamResponse_Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetTeamResponse_Error) Descriptor() protoreflect.EnumDescriptor {
	return file_team_proto_enumTypes[1].Descriptor()
}

func (GetTeamResponse_Error) Type() protoreflect.EnumType {
	return &file_team_proto_enumTypes[1]
}

func (x GetTeamResponse_Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetTeamResponse_Error.Descriptor instead.
func (GetTeamResponse_Error) EnumDescriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{3, 0}
}

type SearchTeamsResponse_Error int32

const (
	SearchTeamsResponse_NONE            SearchTeamsResponse_Error = 0
	SearchTeamsResponse_QUERY_TOO_SHORT SearchTeamsResponse_Error = 1
)

// Enum value maps for SearchTeamsResponse_Error.
var (
	SearchTeamsResponse_Error_name = map[int32]string{
		0: "NONE",
		1: "QUERY_TOO_SHORT",
	}
	SearchTeamsResponse_Error_value = map[string]int32{
		"NONE":            0,
		"QUERY_TOO_SHORT": 1,
	}
)

func (x SearchTeamsResponse_Error) Enum() *SearchTeamsResponse_Error {
	p := new(SearchTeamsResponse_Error)
	*p = x
	return p
}

func (x SearchTeamsResponse_Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchTeamsResponse_Error) Descriptor() protoreflect.EnumDescriptor {
	return file_team_proto_enumTypes[2].Descriptor()
}

func (SearchTeamsResponse_Error) Type() protoreflect.EnumType {
	return &file_team_proto_enumTypes[2]
}

func (x SearchTeamsResponse_Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchTeamsResponse_Error.Descriptor instead.
func (SearchTeamsResponse_Error) EnumDescriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{7, 0}
}

type DeleteTeamResponse_Error int32

const (
	DeleteTeamResponse_NONE      DeleteTeamResponse_Error = 0
	DeleteTeamResponse_INVALID   DeleteTeamResponse_Error = 1
	DeleteTeamResponse_NOT_FOUND DeleteTeamResponse_Error = 2
)

// Enum value maps for DeleteTeamResponse_Error.
var (
	DeleteTeamResponse_Error_name = map[int32]string{
		0: "NONE",
		1: "INVALID",
		2: "NOT_FOUND",
	}
	DeleteTeamResponse_Error_value = map[string]int32{
		"NONE":      0,
		"INVALID":   1,
		"NOT_FOUND": 2,
	}
)

func (x DeleteTeamResponse_Error) Enum() *DeleteTeamResponse_Error {
	p := new(DeleteTeamResponse_Error)
	*p = x
	return p
}

func (x DeleteTeamResponse_Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeleteTeamResponse_Error) Descriptor() protoreflect.EnumDescriptor {
	return file_team_proto_enumTypes[3].Descriptor()
}

func (DeleteTeamResponse_Error) Type() protoreflect.EnumType {
	return &file_team_proto_enumTypes[3]
}

func (x DeleteTeamResponse_Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeleteTeamResponse_Error.Descriptor instead.
func (DeleteTeamResponse_Error) EnumDescriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{11, 0}
}

type JoinTeamResponse_Error int32

const (
	JoinTeamResponse_NONE                   JoinTeamResponse_Error = 0
	JoinTeamResponse_INVALID                JoinTeamResponse_Error = 1
	JoinTeamResponse_NOT_FOUND_OR_TEAM_FULL JoinTeamResponse_Error = 2
	JoinTeamResponse_ALREADY_MEMBER         JoinTeamResponse_Error = 3
)

// Enum value maps for JoinTeamResponse_Error.
var (
	JoinTeamResponse_Error_name = map[int32]string{
		0: "NONE",
		1: "INVALID",
		2: "NOT_FOUND_OR_TEAM_FULL",
		3: "ALREADY_MEMBER",
	}
	JoinTeamResponse_Error_value = map[string]int32{
		"NONE":                   0,
		"INVALID":                1,
		"NOT_FOUND_OR_TEAM_FULL": 2,
		"ALREADY_MEMBER":         3,
	}
)

func (x JoinTeamResponse_Error) Enum() *JoinTeamResponse_Error {
	p := new(JoinTeamResponse_Error)
	*p = x
	return p
}

func (x JoinTeamResponse_Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JoinTeamResponse_Error) Descriptor() protoreflect.EnumDescriptor {
	return file_team_proto_enumTypes[4].Descriptor()
}

func (JoinTeamResponse_Error) Type() protoreflect.EnumType {
	return &file_team_proto_enumTypes[4]
}

func (x JoinTeamResponse_Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JoinTeamResponse_Error.Descriptor instead.
func (JoinTeamResponse_Error) EnumDescriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{13, 0}
}

type LeaveTeamResponse_Error int32

const (
	LeaveTeamResponse_NONE       LeaveTeamResponse_Error = 0
	LeaveTeamResponse_INVALID    LeaveTeamResponse_Error = 1
	LeaveTeamResponse_NOT_FOUND  LeaveTeamResponse_Error = 2
	LeaveTeamResponse_NOT_MEMBER LeaveTeamResponse_Error = 3
)

// Enum value maps for LeaveTeamResponse_Error.
var (
	LeaveTeamResponse_Error_name = map[int32]string{
		0: "NONE",
		1: "INVALID",
		2: "NOT_FOUND",
		3: "NOT_MEMBER",
	}
	LeaveTeamResponse_Error_value = map[string]int32{
		"NONE":       0,
		"INVALID":    1,
		"NOT_FOUND":  2,
		"NOT_MEMBER": 3,
	}
)

func (x LeaveTeamResponse_Error) Enum() *LeaveTeamResponse_Error {
	p := new(LeaveTeamResponse_Error)
	*p = x
	return p
}

func (x LeaveTeamResponse_Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LeaveTeamResponse_Error) Descriptor() protoreflect.EnumDescriptor {
	return file_team_proto_enumTypes[5].Descriptor()
}

func (LeaveTeamResponse_Error) Type() protoreflect.EnumType {
	return &file_team_proto_enumTypes[5]
}

func (x LeaveTeamResponse_Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LeaveTeamResponse_Error.Descriptor instead.
func (LeaveTeamResponse_Error) EnumDescriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{15, 0}
}

type CreateTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Owner               uint64            `protobuf:"varint,2,opt,name=owner,proto3" json:"owner,omitempty"`
	MembersWithoutOwner []uint64          `protobuf:"varint,3,rep,packed,name=membersWithoutOwner,proto3" json:"membersWithoutOwner,omitempty"`
	Score               *int64            `protobuf:"varint,4,opt,name=score,proto3,oneof" json:"score,omitempty"`
	Data                map[string]string `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreateTeamRequest) Reset() {
	*x = CreateTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeamRequest) ProtoMessage() {}

func (x *CreateTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeamRequest.ProtoReflect.Descriptor instead.
func (*CreateTeamRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTeamRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTeamRequest) GetOwner() uint64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *CreateTeamRequest) GetMembersWithoutOwner() []uint64 {
	if x != nil {
		return x.MembersWithoutOwner
	}
	return nil
}

func (x *CreateTeamRequest) GetScore() int64 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

func (x *CreateTeamRequest) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateTeamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Team    *Team                    `protobuf:"bytes,2,opt,name=team,proto3" json:"team,omitempty"`
	Error   CreateTeamResponse_Error `protobuf:"varint,3,opt,name=error,proto3,enum=api.CreateTeamResponse_Error" json:"error,omitempty"`
}

func (x *CreateTeamResponse) Reset() {
	*x = CreateTeamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeamResponse) ProtoMessage() {}

func (x *CreateTeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeamResponse.ProtoReflect.Descriptor instead.
func (*CreateTeamResponse) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTeamResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateTeamResponse) GetTeam() *Team {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *CreateTeamResponse) GetError() CreateTeamResponse_Error {
	if x != nil {
		return x.Error
	}
	return CreateTeamResponse_NONE
}

type GetTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Name  *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Owner *uint64 `protobuf:"varint,3,opt,name=owner,proto3,oneof" json:"owner,omitempty"`
}

func (x *GetTeamRequest) Reset() {
	*x = GetTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamRequest) ProtoMessage() {}

func (x *GetTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamRequest.ProtoReflect.Descriptor instead.
func (*GetTeamRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{2}
}

func (x *GetTeamRequest) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *GetTeamRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GetTeamRequest) GetOwner() uint64 {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return 0
}

type GetTeamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                  `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Team    *Team                 `protobuf:"bytes,2,opt,name=team,proto3" json:"team,omitempty"`
	Error   GetTeamResponse_Error `protobuf:"varint,3,opt,name=error,proto3,enum=api.GetTeamResponse_Error" json:"error,omitempty"`
}

func (x *GetTeamResponse) Reset() {
	*x = GetTeamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamResponse) ProtoMessage() {}

func (x *GetTeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamResponse.ProtoReflect.Descriptor instead.
func (*GetTeamResponse) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{3}
}

func (x *GetTeamResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetTeamResponse) GetTeam() *Team {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *GetTeamResponse) GetError() GetTeamResponse_Error {
	if x != nil {
		return x.Error
	}
	return GetTeamResponse_NONE
}

type GetTeamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Max  *uint64 `protobuf:"varint,1,opt,name=max,proto3,oneof" json:"max,omitempty"`
	Page *uint64 `protobuf:"varint,2,opt,name=page,proto3,oneof" json:"page,omitempty"`
}

func (x *GetTeamsRequest) Reset() {
	*x = GetTeamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamsRequest) ProtoMessage() {}

func (x *GetTeamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamsRequest.ProtoReflect.Descriptor instead.
func (*GetTeamsRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{4}
}

func (x *GetTeamsRequest) GetMax() uint64 {
	if x != nil && x.Max != nil {
		return *x.Max
	}
	return 0
}

func (x *GetTeamsRequest) GetPage() uint64 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

type GetTeamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Teams   []*Team `protobuf:"bytes,2,rep,name=teams,proto3" json:"teams,omitempty"`
}

func (x *GetTeamsResponse) Reset() {
	*x = GetTeamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamsResponse) ProtoMessage() {}

func (x *GetTeamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamsResponse.ProtoReflect.Descriptor instead.
func (*GetTeamsResponse) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{5}
}

func (x *GetTeamsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetTeamsResponse) GetTeams() []*Team {
	if x != nil {
		return x.Teams
	}
	return nil
}

type SearchTeamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query      string           `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Pagination *GetTeamsRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SearchTeamsRequest) Reset() {
	*x = SearchTeamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTeamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTeamsRequest) ProtoMessage() {}

func (x *SearchTeamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTeamsRequest.ProtoReflect.Descriptor instead.
func (*SearchTeamsRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{6}
}

func (x *SearchTeamsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchTeamsRequest) GetPagination() *GetTeamsRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SearchTeamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                      `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Teams   []*Team                   `protobuf:"bytes,2,rep,name=teams,proto3" json:"teams,omitempty"`
	Error   SearchTeamsResponse_Error `protobuf:"varint,3,opt,name=error,proto3,enum=api.SearchTeamsResponse_Error" json:"error,omitempty"`
}

func (x *SearchTeamsResponse) Reset() {
	*x = SearchTeamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTeamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTeamsResponse) ProtoMessage() {}

func (x *SearchTeamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTeamsResponse.ProtoReflect.Descriptor instead.
func (*SearchTeamsResponse) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{7}
}

func (x *SearchTeamsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SearchTeamsResponse) GetTeams() []*Team {
	if x != nil {
		return x.Teams
	}
	return nil
}

func (x *SearchTeamsResponse) GetError() SearchTeamsResponse_Error {
	if x != nil {
		return x.Error
	}
	return SearchTeamsResponse_NONE
}

type UpdateTeamDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Team *GetTeamRequest   `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
	Data map[string]string `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateTeamDataRequest) Reset() {
	*x = UpdateTeamDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeamDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamDataRequest) ProtoMessage() {}

func (x *UpdateTeamDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamDataRequest.ProtoReflect.Descriptor instead.
func (*UpdateTeamDataRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateTeamDataRequest) GetTeam() *GetTeamRequest {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *UpdateTeamDataRequest) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateTeamScoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Team        *GetTeamRequest `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
	ScoreOffset int64           `protobuf:"varint,2,opt,name=scoreOffset,proto3" json:"scoreOffset,omitempty"`
}

func (x *UpdateTeamScoreRequest) Reset() {
	*x = UpdateTeamScoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeamScoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamScoreRequest) ProtoMessage() {}

func (x *UpdateTeamScoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamScoreRequest.ProtoReflect.Descriptor instead.
func (*UpdateTeamScoreRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateTeamScoreRequest) GetTeam() *GetTeamRequest {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *UpdateTeamScoreRequest) GetScoreOffset() int64 {
	if x != nil {
		return x.ScoreOffset
	}
	return 0
}

type DeleteTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Team *GetTeamRequest `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
}

func (x *DeleteTeamRequest) Reset() {
	*x = DeleteTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTeamRequest) ProtoMessage() {}

func (x *DeleteTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTeamRequest.ProtoReflect.Descriptor instead.
func (*DeleteTeamRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteTeamRequest) GetTeam() *GetTeamRequest {
	if x != nil {
		return x.Team
	}
	return nil
}

type DeleteTeamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   DeleteTeamResponse_Error `protobuf:"varint,2,opt,name=error,proto3,enum=api.DeleteTeamResponse_Error" json:"error,omitempty"`
}

func (x *DeleteTeamResponse) Reset() {
	*x = DeleteTeamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTeamResponse) ProtoMessage() {}

func (x *DeleteTeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTeamResponse.ProtoReflect.Descriptor instead.
func (*DeleteTeamResponse) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteTeamResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteTeamResponse) GetError() DeleteTeamResponse_Error {
	if x != nil {
		return x.Error
	}
	return DeleteTeamResponse_NONE
}

type JoinTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Team   *GetTeamRequest `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
	UserId uint64          `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *JoinTeamRequest) Reset() {
	*x = JoinTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinTeamRequest) ProtoMessage() {}

func (x *JoinTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinTeamRequest.ProtoReflect.Descriptor instead.
func (*JoinTeamRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{12}
}

func (x *JoinTeamRequest) GetTeam() *GetTeamRequest {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *JoinTeamRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type JoinTeamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Team    *Team                  `protobuf:"bytes,2,opt,name=team,proto3" json:"team,omitempty"`
	Error   JoinTeamResponse_Error `protobuf:"varint,3,opt,name=error,proto3,enum=api.JoinTeamResponse_Error" json:"error,omitempty"`
}

func (x *JoinTeamResponse) Reset() {
	*x = JoinTeamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinTeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinTeamResponse) ProtoMessage() {}

func (x *JoinTeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinTeamResponse.ProtoReflect.Descriptor instead.
func (*JoinTeamResponse) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{13}
}

func (x *JoinTeamResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *JoinTeamResponse) GetTeam() *Team {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *JoinTeamResponse) GetError() JoinTeamResponse_Error {
	if x != nil {
		return x.Error
	}
	return JoinTeamResponse_NONE
}

type LeaveTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Team   *GetTeamRequest `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
	UserId uint64          `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *LeaveTeamRequest) Reset() {
	*x = LeaveTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveTeamRequest) ProtoMessage() {}

func (x *LeaveTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveTeamRequest.ProtoReflect.Descriptor instead.
func (*LeaveTeamRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{14}
}

func (x *LeaveTeamRequest) GetTeam() *GetTeamRequest {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *LeaveTeamRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type LeaveTeamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Team    *Team                   `protobuf:"bytes,2,opt,name=team,proto3" json:"team,omitempty"`
	Error   LeaveTeamResponse_Error `protobuf:"varint,3,opt,name=error,proto3,enum=api.LeaveTeamResponse_Error" json:"error,omitempty"`
}

func (x *LeaveTeamResponse) Reset() {
	*x = LeaveTeamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveTeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveTeamResponse) ProtoMessage() {}

func (x *LeaveTeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveTeamResponse.ProtoReflect.Descriptor instead.
func (*LeaveTeamResponse) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{15}
}

func (x *LeaveTeamResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LeaveTeamResponse) GetTeam() *Team {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *LeaveTeamResponse) GetError() LeaveTeamResponse_Error {
	if x != nil {
		return x.Error
	}
	return LeaveTeamResponse_NONE
}

type Team struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Owner               uint64            `protobuf:"varint,3,opt,name=owner,proto3" json:"owner,omitempty"`
	MembersWithoutOwner []uint64          `protobuf:"varint,4,rep,packed,name=membersWithoutOwner,proto3" json:"membersWithoutOwner,omitempty"`
	Score               int64             `protobuf:"varint,5,opt,name=score,proto3" json:"score,omitempty"`
	Rank                uint64            `protobuf:"varint,6,opt,name=rank,proto3" json:"rank,omitempty"`
	Data                map[string]string `protobuf:"bytes,7,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Team) Reset() {
	*x = Team{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Team) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Team) ProtoMessage() {}

func (x *Team) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Team.ProtoReflect.Descriptor instead.
func (*Team) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{16}
}

func (x *Team) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Team) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Team) GetOwner() uint64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *Team) GetMembersWithoutOwner() []uint64 {
	if x != nil {
		return x.MembersWithoutOwner
	}
	return nil
}

func (x *Team) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Team) GetRank() uint64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *Team) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_team_proto protoreflect.FileDescriptor

var file_team_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70,
	0x69, 0x22, 0x83, 0x02, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x12, 0x30, 0x0a, 0x13, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x57, 0x69, 0x74, 0x68,
	0x6f, 0x75, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x13,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x00, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x34,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xe0, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x65, 0x61,
	0x6d, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x33, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5c, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x12, 0x0a, 0x0e, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x53, 0x48, 0x4f, 0x52,
	0x54, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x41, 0x4b, 0x45,
	0x4e, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x5f, 0x54, 0x41, 0x4b,
	0x45, 0x4e, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x4f, 0x4f, 0x5f, 0x4d, 0x41, 0x4e, 0x59,
	0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x53, 0x10, 0x04, 0x22, 0x73, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x02, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22,
	0xab, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a,
	0x04, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x30, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x2d,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x22, 0x52, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x15, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52,
	0x03, 0x6d, 0x61, 0x78, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6d, 0x61, 0x78, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x22, 0x4d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x1f, 0x0a, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73,
	0x22, 0x60, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x34, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xae, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x61,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x05,
	0x74, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x26, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x13,
	0x0a, 0x0f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x53, 0x48, 0x4f, 0x52,
	0x54, 0x10, 0x01, 0x22, 0xb3, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a,
	0x04, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x63, 0x0a, 0x16, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x3c,
	0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x22, 0x92, 0x01, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x33, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x2d, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10,
	0x02, 0x22, 0x52, 0x0a, 0x0f, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xce, 0x01, 0x0a, 0x10, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x74,
	0x65, 0x61, 0x6d, 0x12, 0x31, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x4e, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f,
	0x55, 0x4e, 0x44, 0x5f, 0x4f, 0x52, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x46, 0x55, 0x4c, 0x4c,
	0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x4d, 0x45,
	0x4d, 0x42, 0x45, 0x52, 0x10, 0x03, 0x22, 0x53, 0x0a, 0x10, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x54,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x65,
	0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x74,
	0x65, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xbf, 0x01, 0x0a, 0x11,
	0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x74,
	0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x54, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3d,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x0e, 0x0a,
	0x0a, 0x4e, 0x4f, 0x54, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x03, 0x22, 0xfe, 0x01,
	0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x30, 0x0a, 0x13, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x57, 0x69, 0x74, 0x68, 0x6f,
	0x75, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x13, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x27, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x54, 0x65, 0x61, 0x6d, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xbb,
	0x04, 0x0a, 0x0b, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x16, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x12,
	0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x17, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42,
	0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61,
	0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x54,
	0x65, 0x61, 0x6d, 0x12, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3a, 0x0a, 0x09, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x15, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65,
	0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x07, 0x5a, 0x05,
	0x2e, 0x3b, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_team_proto_rawDescOnce sync.Once
	file_team_proto_rawDescData = file_team_proto_rawDesc
)

func file_team_proto_rawDescGZIP() []byte {
	file_team_proto_rawDescOnce.Do(func() {
		file_team_proto_rawDescData = protoimpl.X.CompressGZIP(file_team_proto_rawDescData)
	})
	return file_team_proto_rawDescData
}

var file_team_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_team_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_team_proto_goTypes = []interface{}{
	(CreateTeamResponse_Error)(0),  // 0: api.CreateTeamResponse.Error
	(GetTeamResponse_Error)(0),     // 1: api.GetTeamResponse.Error
	(SearchTeamsResponse_Error)(0), // 2: api.SearchTeamsResponse.Error
	(DeleteTeamResponse_Error)(0),  // 3: api.DeleteTeamResponse.Error
	(JoinTeamResponse_Error)(0),    // 4: api.JoinTeamResponse.Error
	(LeaveTeamResponse_Error)(0),   // 5: api.LeaveTeamResponse.Error
	(*CreateTeamRequest)(nil),      // 6: api.CreateTeamRequest
	(*CreateTeamResponse)(nil),     // 7: api.CreateTeamResponse
	(*GetTeamRequest)(nil),         // 8: api.GetTeamRequest
	(*GetTeamResponse)(nil),        // 9: api.GetTeamResponse
	(*GetTeamsRequest)(nil),        // 10: api.GetTeamsRequest
	(*GetTeamsResponse)(nil),       // 11: api.GetTeamsResponse
	(*SearchTeamsRequest)(nil),     // 12: api.SearchTeamsRequest
	(*SearchTeamsResponse)(nil),    // 13: api.SearchTeamsResponse
	(*UpdateTeamDataRequest)(nil),  // 14: api.UpdateTeamDataRequest
	(*UpdateTeamScoreRequest)(nil), // 15: api.UpdateTeamScoreRequest
	(*DeleteTeamRequest)(nil),      // 16: api.DeleteTeamRequest
	(*DeleteTeamResponse)(nil),     // 17: api.DeleteTeamResponse
	(*JoinTeamRequest)(nil),        // 18: api.JoinTeamRequest
	(*JoinTeamResponse)(nil),       // 19: api.JoinTeamResponse
	(*LeaveTeamRequest)(nil),       // 20: api.LeaveTeamRequest
	(*LeaveTeamResponse)(nil),      // 21: api.LeaveTeamResponse
	(*Team)(nil),                   // 22: api.Team
	nil,                            // 23: api.CreateTeamRequest.DataEntry
	nil,                            // 24: api.UpdateTeamDataRequest.DataEntry
	nil,                            // 25: api.Team.DataEntry
}
var file_team_proto_depIdxs = []int32{
	23, // 0: api.CreateTeamRequest.data:type_name -> api.CreateTeamRequest.DataEntry
	22, // 1: api.CreateTeamResponse.team:type_name -> api.Team
	0,  // 2: api.CreateTeamResponse.error:type_name -> api.CreateTeamResponse.Error
	22, // 3: api.GetTeamResponse.team:type_name -> api.Team
	1,  // 4: api.GetTeamResponse.error:type_name -> api.GetTeamResponse.Error
	22, // 5: api.GetTeamsResponse.teams:type_name -> api.Team
	10, // 6: api.SearchTeamsRequest.pagination:type_name -> api.GetTeamsRequest
	22, // 7: api.SearchTeamsResponse.teams:type_name -> api.Team
	2,  // 8: api.SearchTeamsResponse.error:type_name -> api.SearchTeamsResponse.Error
	8,  // 9: api.UpdateTeamDataRequest.team:type_name -> api.GetTeamRequest
	24, // 10: api.UpdateTeamDataRequest.data:type_name -> api.UpdateTeamDataRequest.DataEntry
	8,  // 11: api.UpdateTeamScoreRequest.team:type_name -> api.GetTeamRequest
	8,  // 12: api.DeleteTeamRequest.team:type_name -> api.GetTeamRequest
	3,  // 13: api.DeleteTeamResponse.error:type_name -> api.DeleteTeamResponse.Error
	8,  // 14: api.JoinTeamRequest.team:type_name -> api.GetTeamRequest
	22, // 15: api.JoinTeamResponse.team:type_name -> api.Team
	4,  // 16: api.JoinTeamResponse.error:type_name -> api.JoinTeamResponse.Error
	8,  // 17: api.LeaveTeamRequest.team:type_name -> api.GetTeamRequest
	22, // 18: api.LeaveTeamResponse.team:type_name -> api.Team
	5,  // 19: api.LeaveTeamResponse.error:type_name -> api.LeaveTeamResponse.Error
	25, // 20: api.Team.data:type_name -> api.Team.DataEntry
	6,  // 21: api.TeamService.CreateTeam:input_type -> api.CreateTeamRequest
	8,  // 22: api.TeamService.GetTeam:input_type -> api.GetTeamRequest
	10, // 23: api.TeamService.GetTeams:input_type -> api.GetTeamsRequest
	12, // 24: api.TeamService.SearchTeams:input_type -> api.SearchTeamsRequest
	14, // 25: api.TeamService.UpdateTeamData:input_type -> api.UpdateTeamDataRequest
	15, // 26: api.TeamService.UpdateTeamScore:input_type -> api.UpdateTeamScoreRequest
	16, // 27: api.TeamService.DeleteTeam:input_type -> api.DeleteTeamRequest
	18, // 28: api.TeamService.JoinTeam:input_type -> api.JoinTeamRequest
	20, // 29: api.TeamService.LeaveTeam:input_type -> api.LeaveTeamRequest
	7,  // 30: api.TeamService.CreateTeam:output_type -> api.CreateTeamResponse
	9,  // 31: api.TeamService.GetTeam:output_type -> api.GetTeamResponse
	11, // 32: api.TeamService.GetTeams:output_type -> api.GetTeamsResponse
	13, // 33: api.TeamService.SearchTeams:output_type -> api.SearchTeamsResponse
	9,  // 34: api.TeamService.UpdateTeamData:output_type -> api.GetTeamResponse
	9,  // 35: api.TeamService.UpdateTeamScore:output_type -> api.GetTeamResponse
	17, // 36: api.TeamService.DeleteTeam:output_type -> api.DeleteTeamResponse
	19, // 37: api.TeamService.JoinTeam:output_type -> api.JoinTeamResponse
	21, // 38: api.TeamService.LeaveTeam:output_type -> api.LeaveTeamResponse
	30, // [30:39] is the sub-list for method output_type
	21, // [21:30] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_team_proto_init() }
func file_team_proto_init() {
	if File_team_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_team_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTeamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTeamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTeamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeamDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeamScoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTeamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinTeamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveTeamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Team); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_team_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_team_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_team_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_team_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_team_proto_goTypes,
		DependencyIndexes: file_team_proto_depIdxs,
		EnumInfos:         file_team_proto_enumTypes,
		MessageInfos:      file_team_proto_msgTypes,
	}.Build()
	File_team_proto = out.File
	file_team_proto_rawDesc = nil
	file_team_proto_goTypes = nil
	file_team_proto_depIdxs = nil
}
