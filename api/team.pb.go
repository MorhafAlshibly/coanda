// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0--rc2
// source: team.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTeamResponse_Error int32

const (
	CreateTeamResponse_NONE                    CreateTeamResponse_Error = 0
	CreateTeamResponse_OWNER_REQUIRED          CreateTeamResponse_Error = 1
	CreateTeamResponse_NAME_TOO_SHORT          CreateTeamResponse_Error = 2
	CreateTeamResponse_NAME_TOO_LONG           CreateTeamResponse_Error = 3
	CreateTeamResponse_DATA_REQUIRED           CreateTeamResponse_Error = 4
	CreateTeamResponse_OWNER_DATA_REQUIRED     CreateTeamResponse_Error = 5
	CreateTeamResponse_NAME_TAKEN              CreateTeamResponse_Error = 6
	CreateTeamResponse_OWNER_OWNS_ANOTHER_TEAM CreateTeamResponse_Error = 7
	CreateTeamResponse_OWNER_ALREADY_IN_TEAM   CreateTeamResponse_Error = 8
)

// Enum value maps for CreateTeamResponse_Error.
var (
	CreateTeamResponse_Error_name = map[int32]string{
		0: "NONE",
		1: "OWNER_REQUIRED",
		2: "NAME_TOO_SHORT",
		3: "NAME_TOO_LONG",
		4: "DATA_REQUIRED",
		5: "OWNER_DATA_REQUIRED",
		6: "NAME_TAKEN",
		7: "OWNER_OWNS_ANOTHER_TEAM",
		8: "OWNER_ALREADY_IN_TEAM",
	}
	CreateTeamResponse_Error_value = map[string]int32{
		"NONE":                    0,
		"OWNER_REQUIRED":          1,
		"NAME_TOO_SHORT":          2,
		"NAME_TOO_LONG":           3,
		"DATA_REQUIRED":           4,
		"OWNER_DATA_REQUIRED":     5,
		"NAME_TAKEN":              6,
		"OWNER_OWNS_ANOTHER_TEAM": 7,
		"OWNER_ALREADY_IN_TEAM":   8,
	}
)

func (x CreateTeamResponse_Error) Enum() *CreateTeamResponse_Error {
	p := new(CreateTeamResponse_Error)
	*p = x
	return p
}

func (x CreateTeamResponse_Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateTeamResponse_Error) Descriptor() protoreflect.EnumDescriptor {
	return file_team_proto_enumTypes[0].Descriptor()
}

func (CreateTeamResponse_Error) Type() protoreflect.EnumType {
	return &file_team_proto_enumTypes[0]
}

func (x CreateTeamResponse_Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateTeamResponse_Error.Descriptor instead.
func (CreateTeamResponse_Error) EnumDescriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{1, 0}
}

type GetTeamResponse_Error int32

const (
	GetTeamResponse_NONE               GetTeamResponse_Error = 0
	GetTeamResponse_NO_FIELD_SPECIFIED GetTeamResponse_Error = 1
	GetTeamResponse_NOT_FOUND          GetTeamResponse_Error = 2
	GetTeamResponse_NAME_TOO_SHORT     GetTeamResponse_Error = 3
	GetTeamResponse_NAME_TOO_LONG      GetTeamResponse_Error = 4
)

// Enum value maps for GetTeamResponse_Error.
var (
	GetTeamResponse_Error_name = map[int32]string{
		0: "NONE",
		1: "NO_FIELD_SPECIFIED",
		2: "NOT_FOUND",
		3: "NAME_TOO_SHORT",
		4: "NAME_TOO_LONG",
	}
	GetTeamResponse_Error_value = map[string]int32{
		"NONE":               0,
		"NO_FIELD_SPECIFIED": 1,
		"NOT_FOUND":          2,
		"NAME_TOO_SHORT":     3,
		"NAME_TOO_LONG":      4,
	}
)

func (x GetTeamResponse_Error) Enum() *GetTeamResponse_Error {
	p := new(GetTeamResponse_Error)
	*p = x
	return p
}

func (x GetTeamResponse_Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetTeamResponse_Error) Descriptor() protoreflect.EnumDescriptor {
	return file_team_proto_enumTypes[1].Descriptor()
}

func (GetTeamResponse_Error) Type() protoreflect.EnumType {
	return &file_team_proto_enumTypes[1]
}

func (x GetTeamResponse_Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetTeamResponse_Error.Descriptor instead.
func (GetTeamResponse_Error) EnumDescriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{3, 0}
}

type GetTeamMemberResponse_Error int32

const (
	GetTeamMemberResponse_NONE             GetTeamMemberResponse_Error = 0
	GetTeamMemberResponse_USER_ID_REQUIRED GetTeamMemberResponse_Error = 1
	GetTeamMemberResponse_NOT_FOUND        GetTeamMemberResponse_Error = 2
)

// Enum value maps for GetTeamMemberResponse_Error.
var (
	GetTeamMemberResponse_Error_name = map[int32]string{
		0: "NONE",
		1: "USER_ID_REQUIRED",
		2: "NOT_FOUND",
	}
	GetTeamMemberResponse_Error_value = map[string]int32{
		"NONE":             0,
		"USER_ID_REQUIRED": 1,
		"NOT_FOUND":        2,
	}
)

func (x GetTeamMemberResponse_Error) Enum() *GetTeamMemberResponse_Error {
	p := new(GetTeamMemberResponse_Error)
	*p = x
	return p
}

func (x GetTeamMemberResponse_Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetTeamMemberResponse_Error) Descriptor() protoreflect.EnumDescriptor {
	return file_team_proto_enumTypes[2].Descriptor()
}

func (GetTeamMemberResponse_Error) Type() protoreflect.EnumType {
	return &file_team_proto_enumTypes[2]
}

func (x GetTeamMemberResponse_Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetTeamMemberResponse_Error.Descriptor instead.
func (GetTeamMemberResponse_Error) EnumDescriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{6, 0}
}

type GetTeamMembersResponse_Error int32

const (
	GetTeamMembersResponse_NONE               GetTeamMembersResponse_Error = 0
	GetTeamMembersResponse_NO_FIELD_SPECIFIED GetTeamMembersResponse_Error = 1
	GetTeamMembersResponse_NOT_FOUND          GetTeamMembersResponse_Error = 2
	GetTeamMembersResponse_NAME_TOO_SHORT     GetTeamMembersResponse_Error = 3
	GetTeamMembersResponse_NAME_TOO_LONG      GetTeamMembersResponse_Error = 4
)

// Enum value maps for GetTeamMembersResponse_Error.
var (
	GetTeamMembersResponse_Error_name = map[int32]string{
		0: "NONE",
		1: "NO_FIELD_SPECIFIED",
		2: "NOT_FOUND",
		3: "NAME_TOO_SHORT",
		4: "NAME_TOO_LONG",
	}
	GetTeamMembersResponse_Error_value = map[string]int32{
		"NONE":               0,
		"NO_FIELD_SPECIFIED": 1,
		"NOT_FOUND":          2,
		"NAME_TOO_SHORT":     3,
		"NAME_TOO_LONG":      4,
	}
)

func (x GetTeamMembersResponse_Error) Enum() *GetTeamMembersResponse_Error {
	p := new(GetTeamMembersResponse_Error)
	*p = x
	return p
}

func (x GetTeamMembersResponse_Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetTeamMembersResponse_Error) Descriptor() protoreflect.EnumDescriptor {
	return file_team_proto_enumTypes[3].Descriptor()
}

func (GetTeamMembersResponse_Error) Type() protoreflect.EnumType {
	return &file_team_proto_enumTypes[3]
}

func (x GetTeamMembersResponse_Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetTeamMembersResponse_Error.Descriptor instead.
func (GetTeamMembersResponse_Error) EnumDescriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{8, 0}
}

type SearchTeamsResponse_Error int32

const (
	SearchTeamsResponse_NONE            SearchTeamsResponse_Error = 0
	SearchTeamsResponse_QUERY_TOO_SHORT SearchTeamsResponse_Error = 1
	SearchTeamsResponse_QUERY_TOO_LONG  SearchTeamsResponse_Error = 2
)

// Enum value maps for SearchTeamsResponse_Error.
var (
	SearchTeamsResponse_Error_name = map[int32]string{
		0: "NONE",
		1: "QUERY_TOO_SHORT",
		2: "QUERY_TOO_LONG",
	}
	SearchTeamsResponse_Error_value = map[string]int32{
		"NONE":            0,
		"QUERY_TOO_SHORT": 1,
		"QUERY_TOO_LONG":  2,
	}
)

func (x SearchTeamsResponse_Error) Enum() *SearchTeamsResponse_Error {
	p := new(SearchTeamsResponse_Error)
	*p = x
	return p
}

func (x SearchTeamsResponse_Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchTeamsResponse_Error) Descriptor() protoreflect.EnumDescriptor {
	return file_team_proto_enumTypes[4].Descriptor()
}

func (SearchTeamsResponse_Error) Type() protoreflect.EnumType {
	return &file_team_proto_enumTypes[4]
}

func (x SearchTeamsResponse_Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchTeamsResponse_Error.Descriptor instead.
func (SearchTeamsResponse_Error) EnumDescriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{10, 0}
}

type UpdateTeamResponse_Error int32

const (
	UpdateTeamResponse_NONE                          UpdateTeamResponse_Error = 0
	UpdateTeamResponse_NO_FIELD_SPECIFIED            UpdateTeamResponse_Error = 1
	UpdateTeamResponse_NOT_FOUND                     UpdateTeamResponse_Error = 2
	UpdateTeamResponse_NAME_TOO_SHORT                UpdateTeamResponse_Error = 3
	UpdateTeamResponse_NAME_TOO_LONG                 UpdateTeamResponse_Error = 4
	UpdateTeamResponse_NO_UPDATE_SPECIFIED           UpdateTeamResponse_Error = 5
	UpdateTeamResponse_INCREMENT_SCORE_NOT_SPECIFIED UpdateTeamResponse_Error = 6
)

// Enum value maps for UpdateTeamResponse_Error.
var (
	UpdateTeamResponse_Error_name = map[int32]string{
		0: "NONE",
		1: "NO_FIELD_SPECIFIED",
		2: "NOT_FOUND",
		3: "NAME_TOO_SHORT",
		4: "NAME_TOO_LONG",
		5: "NO_UPDATE_SPECIFIED",
		6: "INCREMENT_SCORE_NOT_SPECIFIED",
	}
	UpdateTeamResponse_Error_value = map[string]int32{
		"NONE":                          0,
		"NO_FIELD_SPECIFIED":            1,
		"NOT_FOUND":                     2,
		"NAME_TOO_SHORT":                3,
		"NAME_TOO_LONG":                 4,
		"NO_UPDATE_SPECIFIED":           5,
		"INCREMENT_SCORE_NOT_SPECIFIED": 6,
	}
)

func (x UpdateTeamResponse_Error) Enum() *UpdateTeamResponse_Error {
	p := new(UpdateTeamResponse_Error)
	*p = x
	return p
}

func (x UpdateTeamResponse_Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateTeamResponse_Error) Descriptor() protoreflect.EnumDescriptor {
	return file_team_proto_enumTypes[5].Descriptor()
}

func (UpdateTeamResponse_Error) Type() protoreflect.EnumType {
	return &file_team_proto_enumTypes[5]
}

func (x UpdateTeamResponse_Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateTeamResponse_Error.Descriptor instead.
func (UpdateTeamResponse_Error) EnumDescriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{12, 0}
}

type TeamResponse_Error int32

const (
	TeamResponse_NONE               TeamResponse_Error = 0
	TeamResponse_NO_FIELD_SPECIFIED TeamResponse_Error = 1
	TeamResponse_NOT_FOUND          TeamResponse_Error = 2
	TeamResponse_NAME_TOO_SHORT     TeamResponse_Error = 3
	TeamResponse_NAME_TOO_LONG      TeamResponse_Error = 4
)

// Enum value maps for TeamResponse_Error.
var (
	TeamResponse_Error_name = map[int32]string{
		0: "NONE",
		1: "NO_FIELD_SPECIFIED",
		2: "NOT_FOUND",
		3: "NAME_TOO_SHORT",
		4: "NAME_TOO_LONG",
	}
	TeamResponse_Error_value = map[string]int32{
		"NONE":               0,
		"NO_FIELD_SPECIFIED": 1,
		"NOT_FOUND":          2,
		"NAME_TOO_SHORT":     3,
		"NAME_TOO_LONG":      4,
	}
)

func (x TeamResponse_Error) Enum() *TeamResponse_Error {
	p := new(TeamResponse_Error)
	*p = x
	return p
}

func (x TeamResponse_Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TeamResponse_Error) Descriptor() protoreflect.EnumDescriptor {
	return file_team_proto_enumTypes[6].Descriptor()
}

func (TeamResponse_Error) Type() protoreflect.EnumType {
	return &file_team_proto_enumTypes[6]
}

func (x TeamResponse_Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TeamResponse_Error.Descriptor instead.
func (TeamResponse_Error) EnumDescriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{13, 0}
}

type JoinTeamResponse_Error int32

const (
	JoinTeamResponse_NONE               JoinTeamResponse_Error = 0
	JoinTeamResponse_NO_FIELD_SPECIFIED JoinTeamResponse_Error = 1
	JoinTeamResponse_USER_ID_REQUIRED   JoinTeamResponse_Error = 2
	JoinTeamResponse_DATA_REQUIRED      JoinTeamResponse_Error = 3
	JoinTeamResponse_NAME_TOO_SHORT     JoinTeamResponse_Error = 4
	JoinTeamResponse_NAME_TOO_LONG      JoinTeamResponse_Error = 5
	JoinTeamResponse_NOT_FOUND          JoinTeamResponse_Error = 6
	JoinTeamResponse_TEAM_FULL          JoinTeamResponse_Error = 7
	JoinTeamResponse_ALREADY_IN_A_TEAM  JoinTeamResponse_Error = 8
)

// Enum value maps for JoinTeamResponse_Error.
var (
	JoinTeamResponse_Error_name = map[int32]string{
		0: "NONE",
		1: "NO_FIELD_SPECIFIED",
		2: "USER_ID_REQUIRED",
		3: "DATA_REQUIRED",
		4: "NAME_TOO_SHORT",
		5: "NAME_TOO_LONG",
		6: "NOT_FOUND",
		7: "TEAM_FULL",
		8: "ALREADY_IN_A_TEAM",
	}
	JoinTeamResponse_Error_value = map[string]int32{
		"NONE":               0,
		"NO_FIELD_SPECIFIED": 1,
		"USER_ID_REQUIRED":   2,
		"DATA_REQUIRED":      3,
		"NAME_TOO_SHORT":     4,
		"NAME_TOO_LONG":      5,
		"NOT_FOUND":          6,
		"TEAM_FULL":          7,
		"ALREADY_IN_A_TEAM":  8,
	}
)

func (x JoinTeamResponse_Error) Enum() *JoinTeamResponse_Error {
	p := new(JoinTeamResponse_Error)
	*p = x
	return p
}

func (x JoinTeamResponse_Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JoinTeamResponse_Error) Descriptor() protoreflect.EnumDescriptor {
	return file_team_proto_enumTypes[7].Descriptor()
}

func (JoinTeamResponse_Error) Type() protoreflect.EnumType {
	return &file_team_proto_enumTypes[7]
}

func (x JoinTeamResponse_Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JoinTeamResponse_Error.Descriptor instead.
func (JoinTeamResponse_Error) EnumDescriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{15, 0}
}

type LeaveTeamResponse_Error int32

const (
	LeaveTeamResponse_NONE             LeaveTeamResponse_Error = 0
	LeaveTeamResponse_USER_ID_REQUIRED LeaveTeamResponse_Error = 1
	LeaveTeamResponse_NOT_IN_TEAM      LeaveTeamResponse_Error = 2
	LeaveTeamResponse_MEMBER_IS_OWNER  LeaveTeamResponse_Error = 3
)

// Enum value maps for LeaveTeamResponse_Error.
var (
	LeaveTeamResponse_Error_name = map[int32]string{
		0: "NONE",
		1: "USER_ID_REQUIRED",
		2: "NOT_IN_TEAM",
		3: "MEMBER_IS_OWNER",
	}
	LeaveTeamResponse_Error_value = map[string]int32{
		"NONE":             0,
		"USER_ID_REQUIRED": 1,
		"NOT_IN_TEAM":      2,
		"MEMBER_IS_OWNER":  3,
	}
)

func (x LeaveTeamResponse_Error) Enum() *LeaveTeamResponse_Error {
	p := new(LeaveTeamResponse_Error)
	*p = x
	return p
}

func (x LeaveTeamResponse_Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LeaveTeamResponse_Error) Descriptor() protoreflect.EnumDescriptor {
	return file_team_proto_enumTypes[8].Descriptor()
}

func (LeaveTeamResponse_Error) Type() protoreflect.EnumType {
	return &file_team_proto_enumTypes[8]
}

func (x LeaveTeamResponse_Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LeaveTeamResponse_Error.Descriptor instead.
func (LeaveTeamResponse_Error) EnumDescriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{17, 0}
}

type UpdateTeamMemberResponse_Error int32

const (
	UpdateTeamMemberResponse_NONE             UpdateTeamMemberResponse_Error = 0
	UpdateTeamMemberResponse_USER_ID_REQUIRED UpdateTeamMemberResponse_Error = 1
	UpdateTeamMemberResponse_DATA_REQUIRED    UpdateTeamMemberResponse_Error = 2
	UpdateTeamMemberResponse_NOT_FOUND        UpdateTeamMemberResponse_Error = 3
)

// Enum value maps for UpdateTeamMemberResponse_Error.
var (
	UpdateTeamMemberResponse_Error_name = map[int32]string{
		0: "NONE",
		1: "USER_ID_REQUIRED",
		2: "DATA_REQUIRED",
		3: "NOT_FOUND",
	}
	UpdateTeamMemberResponse_Error_value = map[string]int32{
		"NONE":             0,
		"USER_ID_REQUIRED": 1,
		"DATA_REQUIRED":    2,
		"NOT_FOUND":        3,
	}
)

func (x UpdateTeamMemberResponse_Error) Enum() *UpdateTeamMemberResponse_Error {
	p := new(UpdateTeamMemberResponse_Error)
	*p = x
	return p
}

func (x UpdateTeamMemberResponse_Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateTeamMemberResponse_Error) Descriptor() protoreflect.EnumDescriptor {
	return file_team_proto_enumTypes[9].Descriptor()
}

func (UpdateTeamMemberResponse_Error) Type() protoreflect.EnumType {
	return &file_team_proto_enumTypes[9]
}

func (x UpdateTeamMemberResponse_Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateTeamMemberResponse_Error.Descriptor instead.
func (UpdateTeamMemberResponse_Error) EnumDescriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{19, 0}
}

type CreateTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Owner     uint64           `protobuf:"varint,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Score     *int64           `protobuf:"varint,3,opt,name=score,proto3,oneof" json:"score,omitempty"`
	Data      *structpb.Struct `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	OwnerData *structpb.Struct `protobuf:"bytes,5,opt,name=ownerData,proto3" json:"ownerData,omitempty"`
}

func (x *CreateTeamRequest) Reset() {
	*x = CreateTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeamRequest) ProtoMessage() {}

func (x *CreateTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeamRequest.ProtoReflect.Descriptor instead.
func (*CreateTeamRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTeamRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTeamRequest) GetOwner() uint64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *CreateTeamRequest) GetScore() int64 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

func (x *CreateTeamRequest) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateTeamRequest) GetOwnerData() *structpb.Struct {
	if x != nil {
		return x.OwnerData
	}
	return nil
}

type CreateTeamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   CreateTeamResponse_Error `protobuf:"varint,2,opt,name=error,proto3,enum=api.CreateTeamResponse_Error" json:"error,omitempty"`
}

func (x *CreateTeamResponse) Reset() {
	*x = CreateTeamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeamResponse) ProtoMessage() {}

func (x *CreateTeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeamResponse.ProtoReflect.Descriptor instead.
func (*CreateTeamResponse) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTeamResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateTeamResponse) GetError() CreateTeamResponse_Error {
	if x != nil {
		return x.Error
	}
	return CreateTeamResponse_NONE
}

type TeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Owner  *uint64 `protobuf:"varint,2,opt,name=owner,proto3,oneof" json:"owner,omitempty"`
	Member *uint64 `protobuf:"varint,3,opt,name=member,proto3,oneof" json:"member,omitempty"`
}

func (x *TeamRequest) Reset() {
	*x = TeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamRequest) ProtoMessage() {}

func (x *TeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamRequest.ProtoReflect.Descriptor instead.
func (*TeamRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{2}
}

func (x *TeamRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TeamRequest) GetOwner() uint64 {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return 0
}

func (x *TeamRequest) GetMember() uint64 {
	if x != nil && x.Member != nil {
		return *x.Member
	}
	return 0
}

type GetTeamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                  `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Team    *Team                 `protobuf:"bytes,2,opt,name=team,proto3,oneof" json:"team,omitempty"`
	Error   GetTeamResponse_Error `protobuf:"varint,3,opt,name=error,proto3,enum=api.GetTeamResponse_Error" json:"error,omitempty"`
}

func (x *GetTeamResponse) Reset() {
	*x = GetTeamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamResponse) ProtoMessage() {}

func (x *GetTeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamResponse.ProtoReflect.Descriptor instead.
func (*GetTeamResponse) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{3}
}

func (x *GetTeamResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetTeamResponse) GetTeam() *Team {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *GetTeamResponse) GetError() GetTeamResponse_Error {
	if x != nil {
		return x.Error
	}
	return GetTeamResponse_NONE
}

type GetTeamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Teams   []*Team `protobuf:"bytes,2,rep,name=teams,proto3" json:"teams,omitempty"`
}

func (x *GetTeamsResponse) Reset() {
	*x = GetTeamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamsResponse) ProtoMessage() {}

func (x *GetTeamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamsResponse.ProtoReflect.Descriptor instead.
func (*GetTeamsResponse) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{4}
}

func (x *GetTeamsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetTeamsResponse) GetTeams() []*Team {
	if x != nil {
		return x.Teams
	}
	return nil
}

type GetTeamMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetTeamMemberRequest) Reset() {
	*x = GetTeamMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamMemberRequest) ProtoMessage() {}

func (x *GetTeamMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamMemberRequest.ProtoReflect.Descriptor instead.
func (*GetTeamMemberRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{5}
}

func (x *GetTeamMemberRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetTeamMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success    bool                        `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	TeamMember *TeamMember                 `protobuf:"bytes,2,opt,name=teamMember,proto3,oneof" json:"teamMember,omitempty"`
	Error      GetTeamMemberResponse_Error `protobuf:"varint,3,opt,name=error,proto3,enum=api.GetTeamMemberResponse_Error" json:"error,omitempty"`
}

func (x *GetTeamMemberResponse) Reset() {
	*x = GetTeamMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamMemberResponse) ProtoMessage() {}

func (x *GetTeamMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamMemberResponse.ProtoReflect.Descriptor instead.
func (*GetTeamMemberResponse) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{6}
}

func (x *GetTeamMemberResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetTeamMemberResponse) GetTeamMember() *TeamMember {
	if x != nil {
		return x.TeamMember
	}
	return nil
}

func (x *GetTeamMemberResponse) GetError() GetTeamMemberResponse_Error {
	if x != nil {
		return x.Error
	}
	return GetTeamMemberResponse_NONE
}

type GetTeamMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Team       *TeamRequest `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
	Pagination *Pagination  `protobuf:"bytes,2,opt,name=pagination,proto3,oneof" json:"pagination,omitempty"`
}

func (x *GetTeamMembersRequest) Reset() {
	*x = GetTeamMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamMembersRequest) ProtoMessage() {}

func (x *GetTeamMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamMembersRequest.ProtoReflect.Descriptor instead.
func (*GetTeamMembersRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{7}
}

func (x *GetTeamMembersRequest) GetTeam() *TeamRequest {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *GetTeamMembersRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetTeamMembersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success     bool                         `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	TeamMembers []*TeamMember                `protobuf:"bytes,2,rep,name=teamMembers,proto3" json:"teamMembers,omitempty"`
	Error       GetTeamMembersResponse_Error `protobuf:"varint,3,opt,name=error,proto3,enum=api.GetTeamMembersResponse_Error" json:"error,omitempty"`
}

func (x *GetTeamMembersResponse) Reset() {
	*x = GetTeamMembersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamMembersResponse) ProtoMessage() {}

func (x *GetTeamMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamMembersResponse.ProtoReflect.Descriptor instead.
func (*GetTeamMembersResponse) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{8}
}

func (x *GetTeamMembersResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetTeamMembersResponse) GetTeamMembers() []*TeamMember {
	if x != nil {
		return x.TeamMembers
	}
	return nil
}

func (x *GetTeamMembersResponse) GetError() GetTeamMembersResponse_Error {
	if x != nil {
		return x.Error
	}
	return GetTeamMembersResponse_NONE
}

type SearchTeamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query      string      `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Pagination *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3,oneof" json:"pagination,omitempty"`
}

func (x *SearchTeamsRequest) Reset() {
	*x = SearchTeamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTeamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTeamsRequest) ProtoMessage() {}

func (x *SearchTeamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTeamsRequest.ProtoReflect.Descriptor instead.
func (*SearchTeamsRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{9}
}

func (x *SearchTeamsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchTeamsRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SearchTeamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                      `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Teams   []*Team                   `protobuf:"bytes,2,rep,name=teams,proto3" json:"teams,omitempty"`
	Error   SearchTeamsResponse_Error `protobuf:"varint,3,opt,name=error,proto3,enum=api.SearchTeamsResponse_Error" json:"error,omitempty"`
}

func (x *SearchTeamsResponse) Reset() {
	*x = SearchTeamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTeamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTeamsResponse) ProtoMessage() {}

func (x *SearchTeamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTeamsResponse.ProtoReflect.Descriptor instead.
func (*SearchTeamsResponse) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{10}
}

func (x *SearchTeamsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SearchTeamsResponse) GetTeams() []*Team {
	if x != nil {
		return x.Teams
	}
	return nil
}

func (x *SearchTeamsResponse) GetError() SearchTeamsResponse_Error {
	if x != nil {
		return x.Error
	}
	return SearchTeamsResponse_NONE
}

type UpdateTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Team           *TeamRequest     `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
	Data           *structpb.Struct `protobuf:"bytes,2,opt,name=data,proto3,oneof" json:"data,omitempty"`
	Score          *int64           `protobuf:"varint,3,opt,name=score,proto3,oneof" json:"score,omitempty"`
	IncrementScore *bool            `protobuf:"varint,4,opt,name=incrementScore,proto3,oneof" json:"incrementScore,omitempty"`
}

func (x *UpdateTeamRequest) Reset() {
	*x = UpdateTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamRequest) ProtoMessage() {}

func (x *UpdateTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamRequest.ProtoReflect.Descriptor instead.
func (*UpdateTeamRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateTeamRequest) GetTeam() *TeamRequest {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *UpdateTeamRequest) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateTeamRequest) GetScore() int64 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

func (x *UpdateTeamRequest) GetIncrementScore() bool {
	if x != nil && x.IncrementScore != nil {
		return *x.IncrementScore
	}
	return false
}

type UpdateTeamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   UpdateTeamResponse_Error `protobuf:"varint,2,opt,name=error,proto3,enum=api.UpdateTeamResponse_Error" json:"error,omitempty"`
}

func (x *UpdateTeamResponse) Reset() {
	*x = UpdateTeamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamResponse) ProtoMessage() {}

func (x *UpdateTeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamResponse.ProtoReflect.Descriptor instead.
func (*UpdateTeamResponse) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateTeamResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateTeamResponse) GetError() UpdateTeamResponse_Error {
	if x != nil {
		return x.Error
	}
	return UpdateTeamResponse_NONE
}

type TeamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool               `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   TeamResponse_Error `protobuf:"varint,2,opt,name=error,proto3,enum=api.TeamResponse_Error" json:"error,omitempty"`
}

func (x *TeamResponse) Reset() {
	*x = TeamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamResponse) ProtoMessage() {}

func (x *TeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamResponse.ProtoReflect.Descriptor instead.
func (*TeamResponse) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{13}
}

func (x *TeamResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TeamResponse) GetError() TeamResponse_Error {
	if x != nil {
		return x.Error
	}
	return TeamResponse_NONE
}

type JoinTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Team   *TeamRequest     `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
	UserId uint64           `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Data   *structpb.Struct `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *JoinTeamRequest) Reset() {
	*x = JoinTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinTeamRequest) ProtoMessage() {}

func (x *JoinTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinTeamRequest.ProtoReflect.Descriptor instead.
func (*JoinTeamRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{14}
}

func (x *JoinTeamRequest) GetTeam() *TeamRequest {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *JoinTeamRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *JoinTeamRequest) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type JoinTeamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   JoinTeamResponse_Error `protobuf:"varint,2,opt,name=error,proto3,enum=api.JoinTeamResponse_Error" json:"error,omitempty"`
}

func (x *JoinTeamResponse) Reset() {
	*x = JoinTeamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinTeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinTeamResponse) ProtoMessage() {}

func (x *JoinTeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinTeamResponse.ProtoReflect.Descriptor instead.
func (*JoinTeamResponse) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{15}
}

func (x *JoinTeamResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *JoinTeamResponse) GetError() JoinTeamResponse_Error {
	if x != nil {
		return x.Error
	}
	return JoinTeamResponse_NONE
}

type LeaveTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *LeaveTeamRequest) Reset() {
	*x = LeaveTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveTeamRequest) ProtoMessage() {}

func (x *LeaveTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveTeamRequest.ProtoReflect.Descriptor instead.
func (*LeaveTeamRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{16}
}

func (x *LeaveTeamRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type LeaveTeamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   LeaveTeamResponse_Error `protobuf:"varint,2,opt,name=error,proto3,enum=api.LeaveTeamResponse_Error" json:"error,omitempty"`
}

func (x *LeaveTeamResponse) Reset() {
	*x = LeaveTeamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveTeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveTeamResponse) ProtoMessage() {}

func (x *LeaveTeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveTeamResponse.ProtoReflect.Descriptor instead.
func (*LeaveTeamResponse) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{17}
}

func (x *LeaveTeamResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LeaveTeamResponse) GetError() LeaveTeamResponse_Error {
	if x != nil {
		return x.Error
	}
	return LeaveTeamResponse_NONE
}

type UpdateTeamMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64           `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Data   *structpb.Struct `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateTeamMemberRequest) Reset() {
	*x = UpdateTeamMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeamMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamMemberRequest) ProtoMessage() {}

func (x *UpdateTeamMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamMemberRequest.ProtoReflect.Descriptor instead.
func (*UpdateTeamMemberRequest) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateTeamMemberRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateTeamMemberRequest) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateTeamMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool                           `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   UpdateTeamMemberResponse_Error `protobuf:"varint,2,opt,name=error,proto3,enum=api.UpdateTeamMemberResponse_Error" json:"error,omitempty"`
}

func (x *UpdateTeamMemberResponse) Reset() {
	*x = UpdateTeamMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeamMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamMemberResponse) ProtoMessage() {}

func (x *UpdateTeamMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamMemberResponse.ProtoReflect.Descriptor instead.
func (*UpdateTeamMemberResponse) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateTeamMemberResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateTeamMemberResponse) GetError() UpdateTeamMemberResponse_Error {
	if x != nil {
		return x.Error
	}
	return UpdateTeamMemberResponse_NONE
}

type Team struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Owner     uint64                 `protobuf:"varint,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Score     int64                  `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	Ranking   uint64                 `protobuf:"varint,4,opt,name=ranking,proto3" json:"ranking,omitempty"`
	Data      *structpb.Struct       `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Team) Reset() {
	*x = Team{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Team) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Team) ProtoMessage() {}

func (x *Team) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Team.ProtoReflect.Descriptor instead.
func (*Team) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{20}
}

func (x *Team) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Team) GetOwner() uint64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *Team) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Team) GetRanking() uint64 {
	if x != nil {
		return x.Ranking
	}
	return 0
}

func (x *Team) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Team) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Team) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type TeamMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Team      string                 `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
	UserId    uint64                 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Data      *structpb.Struct       `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	JoinedAt  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=joinedAt,proto3" json:"joinedAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *TeamMember) Reset() {
	*x = TeamMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_team_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamMember) ProtoMessage() {}

func (x *TeamMember) ProtoReflect() protoreflect.Message {
	mi := &file_team_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamMember.ProtoReflect.Descriptor instead.
func (*TeamMember) Descriptor() ([]byte, []int) {
	return file_team_proto_rawDescGZIP(), []int{21}
}

func (x *TeamMember) GetTeam() string {
	if x != nil {
		return x.Team
	}
	return ""
}

func (x *TeamMember) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TeamMember) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TeamMember) GetJoinedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.JoinedAt
	}
	return nil
}

func (x *TeamMember) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_team_proto protoreflect.FileDescriptor

var file_team_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70,
	0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc6, 0x01,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x19, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xa6, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x33, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xc0, 0x01, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x12, 0x0a, 0x0e, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x4f, 0x4f,
	0x5f, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x41, 0x4d, 0x45,
	0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4c, 0x4f, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x04, 0x12, 0x17,
	0x0a, 0x13, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x52, 0x45, 0x51,
	0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x41, 0x4d, 0x45, 0x5f,
	0x54, 0x41, 0x4b, 0x45, 0x4e, 0x10, 0x06, 0x12, 0x1b, 0x0a, 0x17, 0x4f, 0x57, 0x4e, 0x45, 0x52,
	0x5f, 0x4f, 0x57, 0x4e, 0x53, 0x5f, 0x41, 0x4e, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x54, 0x45,
	0x41, 0x4d, 0x10, 0x07, 0x12, 0x19, 0x0a, 0x15, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x5f, 0x41, 0x4c,
	0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x49, 0x4e, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x10, 0x08, 0x22,
	0x7c, 0x0a, 0x0b, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x48, 0x02, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xeb, 0x01,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x04, 0x74,
	0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x54, 0x65, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x88, 0x01, 0x01, 0x12,
	0x30, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x5f, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x4e, 0x4f, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44,
	0x5f, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x4e,
	0x41, 0x4d, 0x45, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x10, 0x03, 0x12,
	0x11, 0x0a, 0x0d, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4c, 0x4f, 0x4e, 0x47,
	0x10, 0x04, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x22, 0x4d, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x74, 0x65, 0x61,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54,
	0x65, 0x61, 0x6d, 0x52, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x22, 0x2e, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xe6, 0x01, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x34,
	0x0a, 0x0a, 0x74, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61,
	0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x36, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49,
	0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55,
	0x4e, 0x44, 0x10, 0x02, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x22, 0x7e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04,
	0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x74, 0x65,
	0x61, 0x6d, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xff, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x31, 0x0a, 0x0b, 0x74, 0x65, 0x61, 0x6d,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0b,
	0x74, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x37, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x5f, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x4e, 0x4f, 0x5f, 0x46, 0x49,
	0x45, 0x4c, 0x44, 0x5f, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x53, 0x48, 0x4f, 0x52, 0x54,
	0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4c,
	0x4f, 0x4e, 0x47, 0x10, 0x04, 0x22, 0x6b, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54,
	0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xc2, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x61,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x05,
	0x74, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3a, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x13,
	0x0a, 0x0f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x53, 0x48, 0x4f, 0x52,
	0x54, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x54, 0x4f, 0x4f,
	0x5f, 0x4c, 0x4f, 0x4e, 0x47, 0x10, 0x02, 0x22, 0xd9, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x04, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x74,
	0x65, 0x61, 0x6d, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x2b, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x22, 0x81, 0x02, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x33, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x9b, 0x01, 0x0a, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x16, 0x0a,
	0x12, 0x4e, 0x4f, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55,
	0x4e, 0x44, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x4f, 0x4f,
	0x5f, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x41, 0x4d, 0x45,
	0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4c, 0x4f, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x4e,
	0x4f, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x05, 0x12, 0x21, 0x0a, 0x1d, 0x49, 0x4e, 0x43, 0x52, 0x45, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x53, 0x43, 0x4f, 0x52, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x06, 0x22, 0xb8, 0x01, 0x0a, 0x0c, 0x54, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x5f, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x4e, 0x4f, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44,
	0x5f, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x4e,
	0x41, 0x4d, 0x45, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x10, 0x03, 0x12,
	0x11, 0x0a, 0x0d, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4c, 0x4f, 0x4e, 0x47,
	0x10, 0x04, 0x22, 0x7c, 0x0a, 0x0f, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x90, 0x02, 0x0a, 0x10, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x31, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0xae, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x4e, 0x4f, 0x5f, 0x46, 0x49, 0x45,
	0x4c, 0x44, 0x5f, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x01, 0x12, 0x14,
	0x0a, 0x10, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x52, 0x45, 0x51,
	0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x41, 0x4d, 0x45, 0x5f,
	0x54, 0x4f, 0x4f, 0x5f, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x4e,
	0x41, 0x4d, 0x45, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4c, 0x4f, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x0d,
	0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x06, 0x12, 0x0d, 0x0a,
	0x09, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x07, 0x12, 0x15, 0x0a, 0x11,
	0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x49, 0x4e, 0x5f, 0x41, 0x5f, 0x54, 0x45, 0x41,
	0x4d, 0x10, 0x08, 0x22, 0x2a, 0x0a, 0x10, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0xb0, 0x01, 0x0a, 0x11, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x32, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x4d, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x49,
	0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b,
	0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4e, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x10, 0x02, 0x12, 0x13, 0x0a,
	0x0f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x49, 0x53, 0x5f, 0x4f, 0x57, 0x4e, 0x45, 0x52,
	0x10, 0x03, 0x22, 0x5e, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xba, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61,
	0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x39, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x49, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x49, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x11, 0x0a,
	0x0d, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x02,
	0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x22,
	0x81, 0x02, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x69,
	0x6e, 0x67, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0xd7, 0x01, 0x0a, 0x0a, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x08, 0x6a,
	0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x32, 0xbc, 0x05,
	0x0a, 0x0b, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x16, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2e, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x0b, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x46, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x65,
	0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x61, 0x6d,
	0x73, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65,
	0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x61, 0x6d, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61,
	0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65,
	0x61, 0x6d, 0x12, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x54,
	0x65, 0x61, 0x6d, 0x12, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3a, 0x0a, 0x09, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x15, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65,
	0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x07, 0x5a, 0x05,
	0x2e, 0x3b, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_team_proto_rawDescOnce sync.Once
	file_team_proto_rawDescData = file_team_proto_rawDesc
)

func file_team_proto_rawDescGZIP() []byte {
	file_team_proto_rawDescOnce.Do(func() {
		file_team_proto_rawDescData = protoimpl.X.CompressGZIP(file_team_proto_rawDescData)
	})
	return file_team_proto_rawDescData
}

var file_team_proto_enumTypes = make([]protoimpl.EnumInfo, 10)
var file_team_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_team_proto_goTypes = []any{
	(CreateTeamResponse_Error)(0),       // 0: api.CreateTeamResponse.Error
	(GetTeamResponse_Error)(0),          // 1: api.GetTeamResponse.Error
	(GetTeamMemberResponse_Error)(0),    // 2: api.GetTeamMemberResponse.Error
	(GetTeamMembersResponse_Error)(0),   // 3: api.GetTeamMembersResponse.Error
	(SearchTeamsResponse_Error)(0),      // 4: api.SearchTeamsResponse.Error
	(UpdateTeamResponse_Error)(0),       // 5: api.UpdateTeamResponse.Error
	(TeamResponse_Error)(0),             // 6: api.TeamResponse.Error
	(JoinTeamResponse_Error)(0),         // 7: api.JoinTeamResponse.Error
	(LeaveTeamResponse_Error)(0),        // 8: api.LeaveTeamResponse.Error
	(UpdateTeamMemberResponse_Error)(0), // 9: api.UpdateTeamMemberResponse.Error
	(*CreateTeamRequest)(nil),           // 10: api.CreateTeamRequest
	(*CreateTeamResponse)(nil),          // 11: api.CreateTeamResponse
	(*TeamRequest)(nil),                 // 12: api.TeamRequest
	(*GetTeamResponse)(nil),             // 13: api.GetTeamResponse
	(*GetTeamsResponse)(nil),            // 14: api.GetTeamsResponse
	(*GetTeamMemberRequest)(nil),        // 15: api.GetTeamMemberRequest
	(*GetTeamMemberResponse)(nil),       // 16: api.GetTeamMemberResponse
	(*GetTeamMembersRequest)(nil),       // 17: api.GetTeamMembersRequest
	(*GetTeamMembersResponse)(nil),      // 18: api.GetTeamMembersResponse
	(*SearchTeamsRequest)(nil),          // 19: api.SearchTeamsRequest
	(*SearchTeamsResponse)(nil),         // 20: api.SearchTeamsResponse
	(*UpdateTeamRequest)(nil),           // 21: api.UpdateTeamRequest
	(*UpdateTeamResponse)(nil),          // 22: api.UpdateTeamResponse
	(*TeamResponse)(nil),                // 23: api.TeamResponse
	(*JoinTeamRequest)(nil),             // 24: api.JoinTeamRequest
	(*JoinTeamResponse)(nil),            // 25: api.JoinTeamResponse
	(*LeaveTeamRequest)(nil),            // 26: api.LeaveTeamRequest
	(*LeaveTeamResponse)(nil),           // 27: api.LeaveTeamResponse
	(*UpdateTeamMemberRequest)(nil),     // 28: api.UpdateTeamMemberRequest
	(*UpdateTeamMemberResponse)(nil),    // 29: api.UpdateTeamMemberResponse
	(*Team)(nil),                        // 30: api.Team
	(*TeamMember)(nil),                  // 31: api.TeamMember
	(*structpb.Struct)(nil),             // 32: google.protobuf.Struct
	(*Pagination)(nil),                  // 33: Pagination
	(*timestamppb.Timestamp)(nil),       // 34: google.protobuf.Timestamp
}
var file_team_proto_depIdxs = []int32{
	32, // 0: api.CreateTeamRequest.data:type_name -> google.protobuf.Struct
	32, // 1: api.CreateTeamRequest.ownerData:type_name -> google.protobuf.Struct
	0,  // 2: api.CreateTeamResponse.error:type_name -> api.CreateTeamResponse.Error
	30, // 3: api.GetTeamResponse.team:type_name -> api.Team
	1,  // 4: api.GetTeamResponse.error:type_name -> api.GetTeamResponse.Error
	30, // 5: api.GetTeamsResponse.teams:type_name -> api.Team
	31, // 6: api.GetTeamMemberResponse.teamMember:type_name -> api.TeamMember
	2,  // 7: api.GetTeamMemberResponse.error:type_name -> api.GetTeamMemberResponse.Error
	12, // 8: api.GetTeamMembersRequest.team:type_name -> api.TeamRequest
	33, // 9: api.GetTeamMembersRequest.pagination:type_name -> Pagination
	31, // 10: api.GetTeamMembersResponse.teamMembers:type_name -> api.TeamMember
	3,  // 11: api.GetTeamMembersResponse.error:type_name -> api.GetTeamMembersResponse.Error
	33, // 12: api.SearchTeamsRequest.pagination:type_name -> Pagination
	30, // 13: api.SearchTeamsResponse.teams:type_name -> api.Team
	4,  // 14: api.SearchTeamsResponse.error:type_name -> api.SearchTeamsResponse.Error
	12, // 15: api.UpdateTeamRequest.team:type_name -> api.TeamRequest
	32, // 16: api.UpdateTeamRequest.data:type_name -> google.protobuf.Struct
	5,  // 17: api.UpdateTeamResponse.error:type_name -> api.UpdateTeamResponse.Error
	6,  // 18: api.TeamResponse.error:type_name -> api.TeamResponse.Error
	12, // 19: api.JoinTeamRequest.team:type_name -> api.TeamRequest
	32, // 20: api.JoinTeamRequest.data:type_name -> google.protobuf.Struct
	7,  // 21: api.JoinTeamResponse.error:type_name -> api.JoinTeamResponse.Error
	8,  // 22: api.LeaveTeamResponse.error:type_name -> api.LeaveTeamResponse.Error
	32, // 23: api.UpdateTeamMemberRequest.data:type_name -> google.protobuf.Struct
	9,  // 24: api.UpdateTeamMemberResponse.error:type_name -> api.UpdateTeamMemberResponse.Error
	32, // 25: api.Team.data:type_name -> google.protobuf.Struct
	34, // 26: api.Team.createdAt:type_name -> google.protobuf.Timestamp
	34, // 27: api.Team.updatedAt:type_name -> google.protobuf.Timestamp
	32, // 28: api.TeamMember.data:type_name -> google.protobuf.Struct
	34, // 29: api.TeamMember.joinedAt:type_name -> google.protobuf.Timestamp
	34, // 30: api.TeamMember.updatedAt:type_name -> google.protobuf.Timestamp
	10, // 31: api.TeamService.CreateTeam:input_type -> api.CreateTeamRequest
	12, // 32: api.TeamService.GetTeam:input_type -> api.TeamRequest
	33, // 33: api.TeamService.GetTeams:input_type -> Pagination
	15, // 34: api.TeamService.GetTeamMember:input_type -> api.GetTeamMemberRequest
	17, // 35: api.TeamService.GetTeamMembers:input_type -> api.GetTeamMembersRequest
	19, // 36: api.TeamService.SearchTeams:input_type -> api.SearchTeamsRequest
	21, // 37: api.TeamService.UpdateTeam:input_type -> api.UpdateTeamRequest
	28, // 38: api.TeamService.UpdateTeamMember:input_type -> api.UpdateTeamMemberRequest
	12, // 39: api.TeamService.DeleteTeam:input_type -> api.TeamRequest
	24, // 40: api.TeamService.JoinTeam:input_type -> api.JoinTeamRequest
	26, // 41: api.TeamService.LeaveTeam:input_type -> api.LeaveTeamRequest
	11, // 42: api.TeamService.CreateTeam:output_type -> api.CreateTeamResponse
	13, // 43: api.TeamService.GetTeam:output_type -> api.GetTeamResponse
	14, // 44: api.TeamService.GetTeams:output_type -> api.GetTeamsResponse
	16, // 45: api.TeamService.GetTeamMember:output_type -> api.GetTeamMemberResponse
	18, // 46: api.TeamService.GetTeamMembers:output_type -> api.GetTeamMembersResponse
	20, // 47: api.TeamService.SearchTeams:output_type -> api.SearchTeamsResponse
	22, // 48: api.TeamService.UpdateTeam:output_type -> api.UpdateTeamResponse
	29, // 49: api.TeamService.UpdateTeamMember:output_type -> api.UpdateTeamMemberResponse
	23, // 50: api.TeamService.DeleteTeam:output_type -> api.TeamResponse
	25, // 51: api.TeamService.JoinTeam:output_type -> api.JoinTeamResponse
	27, // 52: api.TeamService.LeaveTeam:output_type -> api.LeaveTeamResponse
	42, // [42:53] is the sub-list for method output_type
	31, // [31:42] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_team_proto_init() }
func file_team_proto_init() {
	if File_team_proto != nil {
		return
	}
	file_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_team_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreateTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateTeamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*TeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetTeamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetTeamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetTeamMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetTeamMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetTeamMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetTeamMembersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SearchTeamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*SearchTeamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTeamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*TeamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*JoinTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*JoinTeamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*LeaveTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*LeaveTeamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTeamMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTeamMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*Team); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_team_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*TeamMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_team_proto_msgTypes[0].OneofWrappers = []any{}
	file_team_proto_msgTypes[2].OneofWrappers = []any{}
	file_team_proto_msgTypes[3].OneofWrappers = []any{}
	file_team_proto_msgTypes[6].OneofWrappers = []any{}
	file_team_proto_msgTypes[7].OneofWrappers = []any{}
	file_team_proto_msgTypes[9].OneofWrappers = []any{}
	file_team_proto_msgTypes[11].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_team_proto_rawDesc,
			NumEnums:      10,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_team_proto_goTypes,
		DependencyIndexes: file_team_proto_depIdxs,
		EnumInfos:         file_team_proto_enumTypes,
		MessageInfos:      file_team_proto_msgTypes,
	}.Build()
	File_team_proto = out.File
	file_team_proto_rawDesc = nil
	file_team_proto_goTypes = nil
	file_team_proto_depIdxs = nil
}
