extend type Mutation {
	CreateEvent(input: CreateEventRequest!): CreateEventResponse
}

input CreateEventRequest {
	name: String!
	data: Struct!
	startedAt: Timestamp!
	rounds: [CreateEventRound]!
}

input CreateEventRound {
	name: String!
	data: Struct!
	endedAt: Timestamp!
	scoring: [Uint64!]!
}

type CreateEventResponse {
	success: Boolean!
	id: Uint64!
	error: CreateEventError!
}

enum CreateEventError {
	NONE
	NAME_TOO_SHORT
	NAME_TOO_LONG
	DATA_REQUIRED
	STARTED_AT_REQUIRED
	STARTED_AT_IN_THE_PAST
	ROUNDS_REQUIRED
	TOO_MANY_ROUNDS
	ROUND_NAME_TOO_SHORT
	ROUND_NAME_TOO_LONG
	ROUND_DATA_REQUIRED
	ROUND_ENDED_AT_REQUIRED
	ROUND_ENDED_AT_BEFORE_STARTED_AT
	ROUND_SCORING_REQUIRED
	ALREADY_EXISTS
	DUPLICATE_ROUND_NAME_OR_ENDED_AT
}

input EventRequest {
	id: Uint64
	name: String
}

input AddEventRoundRequest {
	event: EventRequest!
	userId: Uint64!
	result: Uint64!
	userData: Struct!
	roundUserData: Struct!
}

enum AddEventRoundError {
	NONE
	NAME_TOO_SHORT
	NAME_TOO_LONG
	ID_OR_NAME_REQUIRED
	USER_ID_REQUIRED
	RESULT_REQUIRED
	USER_DATA_REQUIRED
	ROUND_USER_DATA_REQUIRED
	NOT_FOUND
	EVENT_ENDED
	ALREADY_EXISTS
}

type AddEventResultResponse {
	success: Boolean!
	error: AddEventRoundError!
}
